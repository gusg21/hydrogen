Index: core/src/asset.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"core/asset.h\"\r\n\r\n#include \"core/log.h\"\r\n\r\nuint32_t h_core::Asset::initFromYaml(\r\n    h_core::Assets* assets, YAML::Node yaml) {\r\n    HYLOG_WARN(\"ASSET: Undefined initFromYaml method.\\n\");\r\n\r\n    return 1;\r\n}\r\nuint32_t h_core::Asset::precompile(h_core::RuntimeSystems* systems) {\r\n    // A precompile() definition isn't necessary in all/many cases\r\n    // ::printf(\"WARN: ASSET: Undefined precompile method.\\n\");\r\n\r\n    return 0;\r\n}\r\n\r\nstd::vector<char>* h_core::Asset::toPacked() {\r\n    HYLOG_WARN(\"ASSET: Undefined toPacked method, returning empty\\n\");\r\n    return new std::vector<char>();\r\n}\r\n\r\nvoid h_core::Asset::fromPacked(const void* packedData, size_t length) {\r\n    HYLOG_WARN(\"ASSET: Undefined fromPacked method, not loading\\n\");\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/asset.cc b/core/src/asset.cc
--- a/core/src/asset.cc	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/core/src/asset.cc	(date 1726086844283)
@@ -1,6 +1,7 @@
 #include "core/asset.h"
 
 #include "core/log.h"
+#include "imgui.h"
 
 uint32_t h_core::Asset::initFromYaml(
     h_core::Assets* assets, YAML::Node yaml) {
@@ -23,3 +24,7 @@
 void h_core::Asset::fromPacked(const void* packedData, size_t length) {
     HYLOG_WARN("ASSET: Undefined fromPacked method, not loading\n");
 }
+
+void h_core::Asset::doGUI() {
+    ImGui::Text("Asset::doGUI not overriden");
+}
Index: core/src/systems/render/meshasset.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"core/systems/render/meshasset.h\"\r\n\r\n#include <string>\r\n\r\n#include \"SDL2/SDL.h\"\r\n#include \"glad/glad.h\"\r\n\r\n#include \"core/log.h\"\r\n#include \"core/systems/render/renderer.h\"\r\n\r\n// TODO: move these godless monstrosities to a subf\r\n\r\nstatic h_core::render::Vertex cubeVertices[] = {\r\n    { h_core::math::Vector3(-1.0f, 1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, 1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(-1.0f, -1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, -1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(-1.0f, 1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, 1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(-1.0f, -1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, -1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n};\r\nstatic const uint16_t cubeTriList[] = {\r\n    0, 1, 2,           // 0\r\n    1, 3, 2, 4, 6, 5,  // 2\r\n    5, 6, 7, 0, 2, 4,  // 4\r\n    4, 2, 6, 1, 5, 3,  // 6\r\n    5, 7, 3, 0, 4, 1,  // 8\r\n    4, 5, 1, 2, 3, 6,  // 10\r\n    6, 3, 7,\r\n};\r\n\r\n\r\nuint32_t h_core::render::MeshAsset::initFromYaml(h_core::Assets* assets, YAML::Node yaml) {\r\n    HYLOG_INFO(\"MESH: loading model from YAML spec...\\n\");\r\n\r\n    // Parse YAML\r\n    std::string gltfFilePath = yaml[\"gltf\"].as<std::string>(\"\");\r\n    std::string gltfBasePath = yaml[\"gltf_base_path\"].as<std::string>(\"\");\r\n    bool gltfBinaryMode = yaml[\"gltf_binary\"].as<bool>(false);\r\n    m_isCube = yaml[\"primitive\"].as<bool>(false);\r\n\r\n    if (gltfFilePath.empty()) {\r\n        HYLOG_ERROR(\"MODEL: no gltf key in model YAML\\n\");\r\n        return MODEL_INIT_FAIL_BAD_GLTF_FILE_PATH;\r\n    }\r\n\r\n    // Load model\r\n    tinygltf::TinyGLTF loader {};\r\n    std::string errorText {};\r\n    std::string warningText {};\r\n\r\n    bool success;\r\n    if (!gltfBinaryMode) {\r\n        size_t gltfTextLength;\r\n        const char* gltfText = (const char*)SDL_LoadFile(gltfFilePath.c_str(), &gltfTextLength);\r\n        success =\r\n            loader.LoadASCIIFromString(&m_model, &errorText, &warningText, gltfText, gltfTextLength, gltfBasePath);\r\n    }\r\n    else {\r\n        size_t glbDataLength;\r\n        const uint8_t* glbData = (const uint8_t*)SDL_LoadFile(gltfFilePath.c_str(), &glbDataLength);\r\n        success = loader.LoadBinaryFromMemory(&m_model, &errorText, &warningText, glbData, glbDataLength, gltfBasePath);\r\n    }\r\n\r\n    if (!warningText.empty()) { HYLOG_WARN(\"MODEL: %s\\n\", warningText.c_str()); }\r\n\r\n    if (!success) {\r\n        HYLOG_ERROR(\"MODEL: %s\\n\", errorText.c_str());\r\n        HYLOG_ERROR(\r\n            \"MODEL: gltfFilePath = %s, gltfBasePath = %s, gltfBinaryMode = %s\\n\", gltfFilePath.c_str(),\r\n            gltfBasePath.c_str(), gltfBinaryMode ? \"YES\" : \"NO\");\r\n        return MODEL_INIT_FAIL_BAD_GLTF;\r\n    }\r\n\r\n    // TODO: VERY TESTING. MUCH WOW\r\n    tinygltf::Node node = m_model.nodes.front();\r\n    tinygltf::Mesh mesh = m_model.meshes[node.mesh];\r\n    tinygltf::Primitive primitiveInfo = mesh.primitives.front();\r\n    m_primitiveMode = primitiveInfo.mode;\r\n\r\n    // pos attribute\r\n    uint32_t posAccessorIndex = primitiveInfo.attributes[\"POSITION\"];\r\n    tinygltf::Accessor posAccessor = m_model.accessors[posAccessorIndex];\r\n    tinygltf::BufferView posBufferView = m_model.bufferViews[posAccessor.bufferView];\r\n    const uint8_t* posBuffer = m_model.buffers[posBufferView.buffer].data.data() + posBufferView.byteOffset;\r\n\r\n    // normal attribute\r\n    uint32_t normalAccessorIndex = primitiveInfo.attributes[\"NORMAL\"];\r\n    tinygltf::Accessor normalAccessor = m_model.accessors[normalAccessorIndex];\r\n    tinygltf::BufferView normalBufferView = m_model.bufferViews[normalAccessor.bufferView];\r\n    const uint8_t* normalBuffer = m_model.buffers[normalBufferView.buffer].data.data() + normalBufferView.byteOffset;\r\n\r\n    // uv attribute\r\n    uint32_t texCoordAccessorIndex = primitiveInfo.attributes[\"TEXCOORD_0\"];\r\n    tinygltf::Accessor texCoordAccessor = m_model.accessors[texCoordAccessorIndex];\r\n    tinygltf::BufferView texCoordBufferView = m_model.bufferViews[texCoordAccessor.bufferView];\r\n    const uint8_t* texCoordBuffer =\r\n        m_model.buffers[texCoordBufferView.buffer].data.data() + texCoordBufferView.byteOffset;\r\n\r\n    // load vertex data\r\n    m_numVertices = posAccessor.count;\r\n    m_vertices = new h_core::render::Vertex[m_numVertices] {};\r\n\r\n    for (uint32_t vertexIndex = 0; vertexIndex < m_numVertices; vertexIndex++) {\r\n        h_core::render::Vertex* vertex = &m_vertices[vertexIndex];\r\n        vertex->position = reinterpret_cast<const h_core::math::Vector3*>(posBuffer)[vertexIndex];\r\n        vertex->normal = reinterpret_cast<const h_core::math::Vector3*>(normalBuffer)[vertexIndex];\r\n        vertex->texCoord = reinterpret_cast<const h_core::math::Vector2*>(texCoordBuffer)[vertexIndex];\r\n    }\r\n\r\n    // load index buffer\r\n    uint32_t indexBufferAccessorIndex = primitiveInfo.indices;\r\n    tinygltf::Accessor indexBufferAccessor = m_model.accessors[indexBufferAccessorIndex];\r\n    tinygltf::BufferView indexBufferView = m_model.bufferViews[indexBufferAccessor.bufferView];\r\n    m_numIndices = indexBufferAccessor.count;\r\n\r\n    // determine index type\r\n    switch (indexBufferAccessor.componentType) {\r\n        case 5121:\r\n            m_meshIndexType = h_core::render::MeshIndexType::BYTE;\r\n            break;\r\n        case 5123:\r\n            m_meshIndexType = h_core::render::MeshIndexType::SHORT;\r\n            break;\r\n        case 5125:\r\n            m_meshIndexType = h_core::render::MeshIndexType::INT;\r\n            break;\r\n\r\n        default:\r\n            return MODEL_INIT_FAIL_INVALID_INDEX_DATA_TYPE;\r\n    }\r\n\r\n    m_indices = m_model.buffers[indexBufferView.buffer].data.data() + indexBufferView.byteOffset;\r\n\r\n    return 0;\r\n}\r\n\r\nuint32_t h_core::render::MeshAsset::precompile(h_core::RuntimeSystems* systems) {\r\n    if (m_isCube) {\r\n        // Just load cube\r\n        HYLOG_DEBUG(\"MESH: Loading cube primitive mesh\\n\");\r\n        loadModel(8, cubeVertices, 36, cubeTriList, h_core::render::MeshIndexType::SHORT, systems->renderer->isGles3());\r\n\r\n        return 0;\r\n    }\r\n\r\n    loadModel(m_numVertices, m_vertices, m_numIndices, m_indices, m_meshIndexType, systems->renderer->isGles3());\r\n\r\n    HYLOG_INFO(\"MESH: Loaded %zu vertices (%zu indices)\\n\", m_numVertices, m_numIndices);\r\n\r\n    return 0;\r\n}\r\n\r\nvoid h_core::render::MeshAsset::loadModel(\r\n    uint32_t vertexBufferCount, const h_core::render::Vertex* vertexBuffer, uint32_t inidicesCount,\r\n    const void* indexBuffer, MeshIndexType indexType, bool useGles3) {\r\n    // Generate buffers and load attributes\r\n    if (!useGles3) {\r\n        ::glGenVertexArrays(1, &m_vertexAttributesHandle);\r\n        ::glBindVertexArray(m_vertexAttributesHandle);\r\n    }\r\n\r\n    HYLOG_DEBUG(\"MESH: using VAO id %d\\n\", m_vertexAttributesHandle);\r\n\r\n    ::glGenBuffers(1, &m_vertexBufferHandle);\r\n    ::glBindBuffer(GL_ARRAY_BUFFER, m_vertexBufferHandle);\r\n\r\n    ::glGenBuffers(1, &m_indexBufferHandle);\r\n    ::glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, m_indexBufferHandle);\r\n\r\n    ::glVertexAttribPointer(\r\n        0, 3, GL_FLOAT, GL_FALSE, sizeof(h_core::render::Vertex),\r\n        (const void*)offsetof(h_core::render::Vertex, position));\r\n    ::glEnableVertexAttribArray(0);\r\n\r\n    ::glVertexAttribPointer(\r\n        1, 3, GL_FLOAT, GL_FALSE, sizeof(h_core::render::Vertex),\r\n        (const void*)offsetof(h_core::render::Vertex, normal));\r\n    ::glEnableVertexAttribArray(1);\r\n\r\n    ::glVertexAttribPointer(\r\n        2, 2, GL_FLOAT, GL_FALSE, sizeof(h_core::render::Vertex),\r\n        (const void*)offsetof(h_core::render::Vertex, texCoord));\r\n    ::glEnableVertexAttribArray(2);\r\n\r\n    // Bind the vertex and index buffers to this VAO\r\n    ::glBindBuffer(GL_ARRAY_BUFFER, m_vertexBufferHandle);\r\n    ::glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, m_indexBufferHandle);\r\n\r\n    // Mark buffers for static drawing (not updated)\r\n    if (vertexBufferCount > 0) {\r\n        ::glBufferData(\r\n            GL_ARRAY_BUFFER, sizeof(h_core::render::Vertex) * vertexBufferCount, vertexBuffer, GL_STATIC_DRAW);\r\n    }\r\n\r\n    if (inidicesCount > 0) {\r\n        // Determine index type size\r\n        size_t indexTypeSize = 0;\r\n        switch (indexType) {\r\n            case MeshIndexType::BYTE:\r\n                indexTypeSize = sizeof(unsigned char);\r\n                break;\r\n            case MeshIndexType::SHORT:\r\n                indexTypeSize = sizeof(unsigned short);\r\n                break;\r\n            case MeshIndexType::INT:\r\n                indexTypeSize = sizeof(unsigned int);\r\n                break;\r\n            default:\r\n                HYLOG_ERROR(\"Undefined mesh index type value\\n\");\r\n                break;\r\n        }\r\n\r\n        ::glBufferData(GL_ELEMENT_ARRAY_BUFFER, indexTypeSize * inidicesCount, indexBuffer, GL_STATIC_DRAW);\r\n    }\r\n\r\n    // Store buffer sizes\r\n    m_numVertices = vertexBufferCount;\r\n    m_numIndices = inidicesCount;\r\n    m_meshIndexType = indexType;\r\n\r\n    // Clean up\r\n    if (!useGles3) { ::glBindVertexArray(0); }\r\n    ::glBindBuffer(GL_ARRAY_BUFFER, 0);\r\n    ::glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);\r\n}\r\n\r\n\r\nGLuint h_core::render::MeshAsset::getIndexBufferHandle() const {\r\n    return m_indexBufferHandle;\r\n}\r\n\r\nGLuint h_core::render::MeshAsset::getVertexAttributesHandle() const {\r\n    return m_vertexAttributesHandle;\r\n}\r\n\r\nGLuint h_core::render::MeshAsset::getVertexBufferHandle() const {\r\n    return m_vertexBufferHandle;\r\n}\r\n\r\nsize_t h_core::render::MeshAsset::getNumVertices() const {\r\n    return m_numVertices;\r\n}\r\n\r\nsize_t h_core::render::MeshAsset::getNumIndices() const {\r\n    return m_numIndices;\r\n}\r\n\r\nh_core::render::MeshIndexType h_core::render::MeshAsset::getMeshIndexType() const {\r\n    return m_meshIndexType;\r\n}\r\n\r\nuint32_t h_core::render::MeshAsset::getPrimitiveMode() const {\r\n    return m_primitiveMode;\r\n}\r\n\r\nstd::vector<char>* h_core::render::MeshAsset::toPacked() {\r\n    std::vector<char>* bytes = new std::vector<char>();\r\n    bytes->reserve(m_numVertices + m_numIndices + 2);  // Try to keep in sync with actual byte requirements\r\n\r\n    bytes->insert(bytes->end(), (char*)&m_numVertices, (char*)&m_numVertices + sizeof(uint32_t));\r\n    bytes->insert(\r\n        bytes->end(), (char*)m_vertices, (char*)(m_vertices) + (m_numVertices * sizeof(h_core::render::Vertex)));\r\n    bytes->insert(bytes->end(), (char*)&m_numIndices, (char*)&m_numIndices + sizeof(uint32_t));\r\n    uint32_t indexSize = 1;\r\n    switch (m_meshIndexType) {\r\n        case MeshIndexType::BYTE:\r\n            indexSize = 1;\r\n            break;\r\n        case MeshIndexType::SHORT:\r\n            indexSize = 2;\r\n            break;\r\n        case MeshIndexType::INT:\r\n            indexSize = 4;\r\n            break;\r\n    }\r\n    bytes->insert(bytes->end(), (char*)m_indices, (char*)(m_indices) + (m_numIndices * indexSize));\r\n\r\n    return bytes;\r\n}\r\n\r\nvoid h_core::render::MeshAsset::fromPacked(const void* data, size_t length) {\r\n    const char* bytes = (const char*)data;\r\n\r\n    HYLOG_DEBUG(\"MESH: loading from packed (%zu bytes)\\n\", length);\r\n    HYLOG_DEBUG(\"MESH: first byte %x\\n\", bytes[0]);\r\n\r\n    uint32_t numVertices = *(uint32_t*)(bytes + 0);\r\n    HYLOG_DEBUG(\"MESH: # of vertices: %d\\n\", numVertices);\r\n\r\n    m_vertices = new h_core::render::Vertex[numVertices];\r\n    memcpy(m_vertices, bytes + sizeof(uint32_t), numVertices * sizeof(h_core::render::Vertex));\r\n\r\n    uint32_t numIndices = *(uint32_t*)(bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex));\r\n    HYLOG_DEBUG(\"MESH: # of indices: %d\\n\", numIndices);\r\n\r\n    m_indices = new uint16_t[numIndices];  // TODO: use actual index type\r\n    memcpy(\r\n        m_indices, bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex) + sizeof(uint32_t),\r\n        numIndices * sizeof(uint16_t));\r\n\r\n    m_numVertices = numVertices;\r\n    m_numIndices = numIndices;\r\n    m_meshIndexType = MeshIndexType::SHORT;\r\n    m_primitiveMode = GL_TRIANGLES;\r\n    m_isCube = false;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/systems/render/meshasset.cc b/core/src/systems/render/meshasset.cc
--- a/core/src/systems/render/meshasset.cc	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/core/src/systems/render/meshasset.cc	(date 1726088025960)
@@ -263,7 +263,7 @@
     bytes->insert(
         bytes->end(), (char*)m_vertices, (char*)(m_vertices) + (m_numVertices * sizeof(h_core::render::Vertex)));
     bytes->insert(bytes->end(), (char*)&m_numIndices, (char*)&m_numIndices + sizeof(uint32_t));
-    uint32_t indexSize = 1;
+    size_t indexSize = 1;
     switch (m_meshIndexType) {
         case MeshIndexType::BYTE:
             indexSize = 1;
@@ -295,7 +295,7 @@
     uint32_t numIndices = *(uint32_t*)(bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex));
     HYLOG_DEBUG("MESH: # of indices: %d\n", numIndices);
 
-    m_indices = new uint16_t[numIndices];  // TODO: use actual index type
+    m_indices = new uint32_t [numIndices];  // TODO: use actual index type
     memcpy(
         m_indices, bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex) + sizeof(uint32_t),
         numIndices * sizeof(uint16_t));
@@ -306,3 +306,22 @@
     m_primitiveMode = GL_TRIANGLES;
     m_isCube = false;
 }
+
+void h_core::render::MeshAsset::doGUI() {
+    ImGui::Text("Vertex Count: %d", m_numVertices);
+    ImGui::Text("Index Count: %d", m_numIndices);
+    const char* indexTypeName;
+    switch (m_meshIndexType) {
+        case MeshIndexType::BYTE:
+            indexTypeName = "BYTE";
+            break;
+        case MeshIndexType::SHORT:
+            indexTypeName = "SHORT";
+            break;
+        case MeshIndexType::INT:
+            indexTypeName = "INT";
+            break;
+    }
+    ImGui::Text("Index Type: %s", indexTypeName);
+    ImGui::Text("Primitive Mode: %s", m_primitiveMode == GL_TRIANGLES ? "TRIANGLES" : "OTHER");
+}
Index: server/corewrap.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import ctypes\r\nimport _ctypes\r\n\r\ncore: ctypes.CDLL\r\nc_str = ctypes.POINTER(ctypes.c_char)\r\n\r\n\r\nclass PackedAsset:\r\n    def __init__(self, packed_asset_pointer: ctypes.c_void_p):\r\n        print(f\"Got packed asset @ {packed_asset_pointer}\", flush=True)\r\n        self.packed_asset_pointer = packed_asset_pointer\r\n\r\n    def __del__(self):\r\n        print(f\"Deleting packed asset @ {self.packed_asset_pointer}\", flush=True)\r\n        core.delete_packed_asset(self.packed_asset_pointer)\r\n\r\n    def __getitem__(self, item: int):\r\n        return core.get_data_in_packed_asset(self.packed_asset_pointer, ctypes.c_uint32(item))\r\n\r\n    def __len__(self):\r\n        return core.get_length_of_packed_asset(self.packed_asset_pointer)\r\n\r\n    def to_bytes(self) -> bytes:\r\n        data = bytes()\r\n        for i in range(len(self)):\r\n            data += self[i][0:1]\r\n        return data\r\n\r\n    def __repr__(self):\r\n        return '[{}]'.format(', '.join(\"0x{0:x}\".format(self[i][0]) for i in range(len(self))))\r\n\r\n\r\ndef load_core(dll_path: str) -> None:\r\n    global core\r\n\r\n    if not dll_path:\r\n        raise TypeError(\"Invalid DLL path\")\r\n\r\n    handle = _ctypes.LoadLibrary(dll_path)\r\n    core = ctypes.CDLL(dll_path, handle=handle) if handle != 0 else handle\r\n\r\n    core.create_engine.restype = None\r\n    core.create_engine.argtypes = []\r\n    core.load_project.restype = None\r\n    core.load_project.argtypes = [ctypes.c_char_p, ctypes.c_char_p]\r\n    core.get_loaded_asset_count.restype = ctypes.c_uint32\r\n    core.get_loaded_asset_count.argtypes = []\r\n    core.get_max_asset_count.restype = ctypes.c_uint32\r\n    core.get_max_asset_count.argtypes = []\r\n    core.is_packed_asset_index_valid.restype = ctypes.c_bool\r\n    core.is_packed_asset_index_valid.argtypes = [ctypes.c_uint32]\r\n    core.get_packed_asset_from_index.restype = ctypes.c_void_p\r\n    core.get_packed_asset_from_index.argtypes = [ctypes.c_uint32]\r\n    core.delete_packed_asset.restype = None\r\n    core.delete_packed_asset.argtypes = [ctypes.c_void_p]\r\n    core.get_data_in_packed_asset.restype = ctypes.c_char\r\n    core.get_data_in_packed_asset.argtypes = [ctypes.c_void_p]\r\n    core.get_length_of_packed_asset.restype = ctypes.c_size_t\r\n    core.get_length_of_packed_asset.argtypes = [ctypes.c_void_p]\r\n\r\n\r\ndef create_engine() -> None:\r\n    core.create_engine()\r\n\r\n\r\ndef load_project(project_file: str, assets_base_path: str) -> None:\r\n    core.load_project(ctypes.c_char_p(project_file.encode(\"utf-8\")), ctypes.c_char_p(assets_base_path.encode(\"utf-8\")))\r\n\r\n\r\ndef get_loaded_asset_count() -> int:\r\n    return core.get_loaded_asset_count()\r\n\r\n\r\ndef get_max_asset_count() -> int:\r\n    return core.get_max_asset_count()\r\n\r\n\r\ndef is_packed_asset_index_valid(asset_index: int) -> bool:\r\n    return core.is_packed_asset_index_valid(asset_index)\r\n\r\n\r\ndef get_packed_asset_from_index(asset_index: int) -> PackedAsset:\r\n    return PackedAsset(core.get_packed_asset_from_index(asset_index))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/corewrap.py b/server/corewrap.py
--- a/server/corewrap.py	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/server/corewrap.py	(date 1726087792274)
@@ -7,7 +7,6 @@
 
 class PackedAsset:
     def __init__(self, packed_asset_pointer: ctypes.c_void_p):
-        print(f"Got packed asset @ {packed_asset_pointer}", flush=True)
         self.packed_asset_pointer = packed_asset_pointer
 
     def __del__(self):
Index: .idea/hydrogen.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module classpath=\"CMake\" type=\"CPP_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"Python\" name=\"Python facet\">\r\n      <configuration sdkName=\"Python 3.12 (hydrogen)\" />\r\n    </facet>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/hydrogen.iml b/.idea/hydrogen.iml
--- a/.idea/hydrogen.iml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/.idea/hydrogen.iml	(date 1726087708116)
@@ -2,7 +2,7 @@
 <module classpath="CMake" type="CPP_MODULE" version="4">
   <component name="FacetManager">
     <facet type="Python" name="Python facet">
-      <configuration sdkName="Python 3.12 (hydrogen)" />
+      <configuration sdkName="Python 3.12" />
     </facet>
   </component>
 </module>
\ No newline at end of file
Index: android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>gltf: assets/butter/Butter.glb\r\ngltf_binary: true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml b/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml
--- a/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml	(date 1726087200076)
@@ -1,2 +1,3 @@
-gltf: assets/butter/Butter.glb
+gltf: assets/terrain/canyon1.glb
+#gltf_base_path: assets/terrain/
 gltf_binary: true
\ No newline at end of file
Index: server/hyassetserver.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport time\r\n\r\nimport flask\r\n\r\nimport corewrap\r\n\r\n\r\nclass HyAssetServer():\r\n    app = flask.Flask(\"server\")\r\n    load_simulation_time = 0\r\n\r\n    def __init__(self, dll_path: str, project_path: str = \"assets/project.yml\", load_simulation_time: float = 0):\r\n        HyAssetServer.load_simulation_time = load_simulation_time\r\n\r\n        corewrap.load_core(dll_path)\r\n        corewrap.create_engine()\r\n        corewrap.load_project(project_path, os.getcwd() + \"/\")\r\n\r\n    def run(self, host, port):\r\n        HyAssetServer.app.run(host, port)\r\n\r\n\r\n@HyAssetServer.app.route(\"/\")\r\ndef status_page():\r\n    return flask.render_template(\"status.html\", loaded_asset_count=corewrap.get_loaded_asset_count(),\r\n                                 max_asset_count=corewrap.get_max_asset_count())\r\n\r\n\r\n@HyAssetServer.app.route(\"/asset/\", defaults={\"asset_id\": -1})\r\n@HyAssetServer.app.route(\"/asset/<int:asset_id>\")\r\ndef get_asset(asset_id: int):\r\n    if asset_id < 0:\r\n        return flask.render_template(\"bad_asset_get.html\", asset_id=asset_id), 404\r\n\r\n    if corewrap.is_packed_asset_index_valid(asset_id):\r\n        if HyAssetServer.load_simulation_time > 0:\r\n            print(\"Simulating heavy load...\")\r\n            time.sleep(HyAssetServer.load_simulation_time)\r\n        return flask.Response(\r\n            corewrap.get_packed_asset_from_index(asset_id).to_bytes(), mimetype=\"bin/hya\"\r\n        ), 200\r\n    else:\r\n        return flask.render_template(\"bad_asset_get.html\", asset_id=asset_id), 404\r\n\r\n\r\n@HyAssetServer.app.errorhandler(404)\r\ndef not_found(e):\r\n    return flask.render_template(\"404.html\"), 404\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/hyassetserver.py b/server/hyassetserver.py
--- a/server/hyassetserver.py	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/server/hyassetserver.py	(date 1726087795498)
@@ -34,11 +34,14 @@
         return flask.render_template("bad_asset_get.html", asset_id=asset_id), 404
 
     if corewrap.is_packed_asset_index_valid(asset_id):
+        print("Serving asset {}...".format(asset_id))
         if HyAssetServer.load_simulation_time > 0:
             print("Simulating heavy load...")
             time.sleep(HyAssetServer.load_simulation_time)
+        asset_bytes = corewrap.get_packed_asset_from_index(asset_id).to_bytes()
+        print(len(asset_bytes))
         return flask.Response(
-            corewrap.get_packed_asset_from_index(asset_id).to_bytes(), mimetype="bin/hya"
+            asset_bytes, mimetype="bin/hya"
         ), 200
     else:
         return flask.render_template("bad_asset_get.html", asset_id=asset_id), 404
Index: core/include/core/systems/render/meshasset.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#pragma once\r\n\r\n#include \"glad/glad.h\"\r\n#include \"tiny_gltf.h\"\r\n\r\n#include \"core/asset.h\"\r\n#include \"core/math/vector2.h\"\r\n#include \"core/math/vector3.h\"\r\n\r\n#define MODEL_INIT_FAIL_BAD_GLTF_FILE_PATH      1\r\n#define MODEL_INIT_FAIL_BAD_GLTF                2\r\n#define MODEL_INIT_FAIL_INVALID_INDEX_DATA_TYPE 3\r\n\r\nnamespace h_core {\r\nnamespace render {\r\nstruct Vertex {\r\n    Vertex() = default;\r\n\r\n    h_core::math::Vector3 position;\r\n    h_core::math::Vector3 normal;\r\n    h_core::math::Vector2 texCoord;\r\n\r\n    // static bgfx::VertexLayout layout;\r\n};\r\n\r\n// What for?\r\n// struct MeshData {\r\n//     std::vector<h_core::Vertex> vertices;\r\n//     std::vector<uint32_t> indicies;\r\n// };\r\n\r\nenum class MeshIndexType { BYTE, SHORT, INT };\r\n\r\nclass MeshAsset : public Asset {\r\n  public:\r\n    MeshAsset() = default;\r\n\r\n    uint32_t initFromYaml(h_core::Assets* assets, YAML::Node node) override;\r\n    uint32_t precompile(h_core::RuntimeSystems* systems) override;\r\n    std::vector<char>* toPacked() override;\r\n    void fromPacked(const void* data, size_t length) override;\r\n\r\n    void loadModel(\r\n        uint32_t vertexCount, const Vertex* vertexBuffer, uint32_t inidicesCount, const void* indexBuffer,\r\n        MeshIndexType type, bool useGles3);\r\n\r\n    [[nodiscard]] GLuint getVertexBufferHandle() const;\r\n    [[nodiscard]] GLuint getIndexBufferHandle() const;\r\n    [[nodiscard]] GLuint getVertexAttributesHandle() const;\r\n    [[nodiscard]] size_t getNumVertices() const;\r\n    [[nodiscard]] size_t getNumIndices() const;\r\n    [[nodiscard]] MeshIndexType getMeshIndexType() const;\r\n    [[nodiscard]] uint32_t getPrimitiveMode() const;\r\n\r\n    HYASSET(3);\r\n\r\n  private:\r\n    tinygltf::Model m_model {};\r\n    GLuint m_vertexBufferHandle = 0, m_vertexAttributesHandle = 0, m_indexBufferHandle = 0;\r\n    uint32_t m_numVertices = 0;\r\n    uint32_t m_numIndices = 0;\r\n    h_core::render::Vertex* m_vertices = nullptr;\r\n    void* m_indices = nullptr;\r\n    h_core::render::MeshIndexType m_meshIndexType = h_core::render::MeshIndexType::BYTE;\r\n    uint32_t m_primitiveMode = 4;\r\n    bool m_isCube = false;\r\n};\r\n}  // namespace render\r\n}  // namespace h_core
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/include/core/systems/render/meshasset.h b/core/include/core/systems/render/meshasset.h
--- a/core/include/core/systems/render/meshasset.h	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/core/include/core/systems/render/meshasset.h	(date 1726086421144)
@@ -39,6 +39,7 @@
     uint32_t precompile(h_core::RuntimeSystems* systems) override;
     std::vector<char>* toPacked() override;
     void fromPacked(const void* data, size_t length) override;
+    void doGUI() override;
 
     void loadModel(
         uint32_t vertexCount, const Vertex* vertexBuffer, uint32_t inidicesCount, const void* indexBuffer,
Index: runtime/assets/test_model2.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>gltf: assets/butter/Butter.glb\r\ngltf_binary: true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runtime/assets/test_model2.yml b/runtime/assets/test_model2.yml
--- a/runtime/assets/test_model2.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/runtime/assets/test_model2.yml	(date 1726087200076)
@@ -1,2 +1,3 @@
-gltf: assets/butter/Butter.glb
+gltf: assets/terrain/canyon1.glb
+#gltf_base_path: assets/terrain/
 gltf_binary: true
\ No newline at end of file
Index: android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"core/asset.h\"\r\n\r\n#include \"core/log.h\"\r\n\r\nuint32_t h_core::Asset::initFromYaml(\r\n    h_core::Assets* assets, YAML::Node yaml) {\r\n    HYLOG_WARN(\"ASSET: Undefined initFromYaml method.\\n\");\r\n\r\n    return 1;\r\n}\r\nuint32_t h_core::Asset::precompile(h_core::RuntimeSystems* systems) {\r\n    // A precompile() definition isn't necessary in all/many cases\r\n    // ::printf(\"WARN: ASSET: Undefined precompile method.\\n\");\r\n\r\n    return 0;\r\n}\r\n\r\nstd::vector<char>* h_core::Asset::toPacked() {\r\n    HYLOG_WARN(\"ASSET: Undefined toPacked method, returning empty\\n\");\r\n    return new std::vector<char>();\r\n}\r\n\r\nvoid h_core::Asset::fromPacked(const void* packedData, size_t length) {\r\n    HYLOG_WARN(\"ASSET: Undefined fromPacked method, not loading\\n\");\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc b/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc
--- a/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc	(date 1726086844283)
@@ -1,6 +1,7 @@
 #include "core/asset.h"
 
 #include "core/log.h"
+#include "imgui.h"
 
 uint32_t h_core::Asset::initFromYaml(
     h_core::Assets* assets, YAML::Node yaml) {
@@ -23,3 +24,7 @@
 void h_core::Asset::fromPacked(const void* packedData, size_t length) {
     HYLOG_WARN("ASSET: Undefined fromPacked method, not loading\n");
 }
+
+void h_core::Asset::doGUI() {
+    ImGui::Text("Asset::doGUI not overriden");
+}
Index: android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"CMakePresetLoader\">{\r\n  &quot;useNewFormat&quot;: true\r\n}</component>\r\n  <component name=\"CMakeProjectFlavorService\">\r\n    <option name=\"flavorId\" value=\"CMakePlainProjectFlavor\" />\r\n  </component>\r\n  <component name=\"CMakeReloadState\">\r\n    <option name=\"reloaded\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\">\r\n    <generated>\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_CopyShaders\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"angelscript\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_Shared\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2main\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Experimental\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"libcurl_object\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Nightly\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalSubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2-static\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"imgui.cmake\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_AngelScriptExtensions\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"sdl_headers_copy\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousSubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenServer_Wrapper\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"uninstall\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"libcurl_static\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenRuntime_Assets\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyMemoryCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2_test\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlySubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"yaml-cpp\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousUpdate\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenRuntime\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"tinygltf\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyUpdate\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"glad\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenServer\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Continuous\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalUpdate\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug-Visual Studio\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" TOOLCHAIN_NAME=\"Visual Studio\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b7057f5c-305f-4c98-9fc0-3c11825fbbe1\" name=\"Changes\" comment=\"added libcurl\">\r\n      <change afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/log.h\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/core/include/core/log.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/assets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/assets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/runtimeassets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/runtimeassets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/runtimeconsole.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/runtimeconsole.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/actorspecasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/actorspecasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/asset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/asset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/assets.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/assets.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/engine.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/engine.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/project/project.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/project/project.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/runtimeassets.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/runtimeassets.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/runtimeconsole.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/runtimeconsole.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/runtimeengine.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/runtimeengine.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/scene.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/scene.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/render/meshasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/render/meshasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/render/renderer.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/render/renderer.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/script/scriptasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/script/scriptasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/script/scripting.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/script/scripting.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/window.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/window.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/server/wrap/wrap.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/server/wrap/wrap.cc\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug-Visual Studio\" />\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"HTML File\" />\r\n        <option value=\"CMakeLists.txt\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;gusg21&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/gusg21/hydrogen.git&quot;,\r\n    &quot;accountId&quot;: &quot;5b442d73-9f27-4fc6-a9b8-1cf6ee7986c9&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/assets.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/engine.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/input/input.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/netrequestthreadcontext.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/runtimeassets.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/runtimeengine.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/systems/render/gles3renderer.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/editor/include/editor/editorengine.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"NamedScopeManager\">\r\n    <scope name=\"Core Source\" pattern=\"file:core/src//*\" />\r\n    <scope name=\"Core Headers\" pattern=\"file:core/include//*\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2024\" />\r\n    <option name=\"minorVersion\" value=\"2.1\" />\r\n    <option name=\"productBranch\" value=\"Classic\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lRXeQrlEOuhFzwP84z4XzhILwF\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,\r\n    &quot;CMake Application.HydrogenEditor.executor&quot;: &quot;Debug&quot;,\r\n    &quot;CMake Application.HydrogenRuntime.executor&quot;: &quot;Run&quot;,\r\n    &quot;CMake Debug.Hydrogen.executor&quot;: &quot;Debug&quot;,\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.RadMigrateCodeStyle&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;cf.advertisement.text.overridden&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Projects/hydrogen/server/templates&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,\r\n    &quot;two.files.diff.last.used.file&quot;: &quot;C:/Projects/hydrogen/server/templates/status.html&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Projects\\hydrogen\\server\\templates\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\server\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\shaders\\es\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\runtime\\assets\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\include\\core\" />\r\n      <recent name=\"C:\\Users\\angus.goucher\\CLionProjects\\hydrogen\\editor\\include\\editor\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\shaders\\core\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\src\\project\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\include\\core\\project\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"CMake Application.HydrogenRuntime\">\r\n    <configuration default=\"true\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Continuous\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Continuous\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousBuild\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousConfigure\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousCoverage\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousMemCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousStart\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousSubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousSubmit\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousTest\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousUpdate\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Experimental\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Experimental\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalBuild\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalConfigure\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalCoverage\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalMemCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalStart\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalSubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalSubmit\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalTest\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalUpdate\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_AngelScriptExtensions\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_AngelScriptExtensions\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_CopyShaders\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_CopyShaders\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_Shared\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_Shared\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenRuntime\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenRuntime\" CONFIG_NAME=\"Debug-Visual Studio\" RUN_TARGET_PROJECT_NAME=\"Hydrogen\" RUN_TARGET_NAME=\"HydrogenRuntime\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenRuntime_Assets\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenRuntime_Assets\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenServer\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenServer\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenServer_Wrapper\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenServer_Wrapper\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Nightly\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Nightly\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyBuild\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyConfigure\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyCoverage\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyMemCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyMemoryCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyMemoryCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyStart\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlySubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlySubmit\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyTest\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyUpdate\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2-static\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2-static\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2_test\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2_test\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2main\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2main\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"angelscript\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"angelscript\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"glad\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"glad\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"imgui.cmake\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"imgui.cmake\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"libcurl_object\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"libcurl_object\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"libcurl_static\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"libcurl_static\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"sdl_headers_copy\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"sdl_headers_copy\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"tinygltf\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"tinygltf\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"uninstall\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"uninstall\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"yaml-cpp\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"yaml-cpp\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"hydrogen\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/server\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/server/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"CMake Application.ContinuousBuild\" />\r\n      <item itemvalue=\"CMake Application.ContinuousConfigure\" />\r\n      <item itemvalue=\"CMake Application.ContinuousCoverage\" />\r\n      <item itemvalue=\"CMake Application.ContinuousMemCheck\" />\r\n      <item itemvalue=\"CMake Application.ContinuousStart\" />\r\n      <item itemvalue=\"CMake Application.ContinuousSubmit\" />\r\n      <item itemvalue=\"CMake Application.ContinuousTest\" />\r\n      <item itemvalue=\"CMake Application.ContinuousUpdate\" />\r\n      <item itemvalue=\"CMake Application.Continuous\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalBuild\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalConfigure\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalCoverage\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalMemCheck\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalStart\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalSubmit\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalTest\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalUpdate\" />\r\n      <item itemvalue=\"CMake Application.Experimental\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_AngelScriptExtensions\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_CopyShaders\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_Shared\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore\" />\r\n      <item itemvalue=\"CMake Application.HydrogenRuntime_Assets\" />\r\n      <item itemvalue=\"CMake Application.HydrogenRuntime\" />\r\n      <item itemvalue=\"CMake Application.HydrogenServer_Wrapper\" />\r\n      <item itemvalue=\"CMake Application.HydrogenServer\" />\r\n      <item itemvalue=\"CMake Application.NightlyBuild\" />\r\n      <item itemvalue=\"CMake Application.NightlyConfigure\" />\r\n      <item itemvalue=\"CMake Application.NightlyCoverage\" />\r\n      <item itemvalue=\"CMake Application.NightlyMemCheck\" />\r\n      <item itemvalue=\"CMake Application.NightlyMemoryCheck\" />\r\n      <item itemvalue=\"CMake Application.NightlyStart\" />\r\n      <item itemvalue=\"CMake Application.NightlySubmit\" />\r\n      <item itemvalue=\"CMake Application.NightlyTest\" />\r\n      <item itemvalue=\"CMake Application.NightlyUpdate\" />\r\n      <item itemvalue=\"CMake Application.Nightly\" />\r\n      <item itemvalue=\"CMake Application.SDL2-static\" />\r\n      <item itemvalue=\"CMake Application.SDL2_test\" />\r\n      <item itemvalue=\"CMake Application.SDL2main\" />\r\n      <item itemvalue=\"CMake Application.angelscript\" />\r\n      <item itemvalue=\"CMake Application.glad\" />\r\n      <item itemvalue=\"CMake Application.imgui.cmake\" />\r\n      <item itemvalue=\"CMake Application.SDL2\" />\r\n      <item itemvalue=\"CMake Application.libcurl_object\" />\r\n      <item itemvalue=\"CMake Application.libcurl_static\" />\r\n      <item itemvalue=\"CMake Application.sdl_headers_copy\" />\r\n      <item itemvalue=\"CMake Application.tinygltf\" />\r\n      <item itemvalue=\"CMake Application.uninstall\" />\r\n      <item itemvalue=\"CMake Application.yaml-cpp\" />\r\n      <item itemvalue=\"Python.main\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b7057f5c-305f-4c98-9fc0-3c11825fbbe1\" name=\"Changes\" comment=\"\" />\r\n      <created>1725137426654</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725137426654</updated>\r\n      <workItem from=\"1725137427672\" duration=\"5528000\" />\r\n      <workItem from=\"1725143960544\" duration=\"9000\" />\r\n      <workItem from=\"1725154721087\" duration=\"3325000\" />\r\n      <workItem from=\"1725161738514\" duration=\"10113000\" />\r\n      <workItem from=\"1725175022297\" duration=\"11047000\" />\r\n      <workItem from=\"1725219536312\" duration=\"102000\" />\r\n      <workItem from=\"1725219651630\" duration=\"40084000\" />\r\n      <workItem from=\"1725396846618\" duration=\"5597000\" />\r\n      <workItem from=\"1725421405150\" duration=\"23873000\" />\r\n      <workItem from=\"1725585006797\" duration=\"1178000\" />\r\n      <workItem from=\"1725591940685\" duration=\"53051000\" />\r\n      <workItem from=\"1725946168594\" duration=\"2007000\" />\r\n      <workItem from=\"1725948695615\" duration=\"4497000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"misc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725138416967</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725138416967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fixed asset loading systems\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725143443249</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725143443249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"working on autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725217404893</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725217404893</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fixed --target parameter\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725217555541</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725217555541</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"added artifacts to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725218626036</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725218626036</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"made autobuild artifacts more precise\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725219240701</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725219240701</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"renamed autobuild setup to &quot;Autobuild&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220158923</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220158923</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"[nobuild] allowed non rebuilding\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220496725</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220496725</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"added macOS autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220658225</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220658225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"removed accidental bad platform pairs from  autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220729307</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220729307</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"removed more accidental bad platform pairs from  autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220763996</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220763996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"use same compiler for c and c++ in autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725235112329</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725235112329</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"[nobuild] bye bye macos autobuild support\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725235332563</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725235332563</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"added input system\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725319509179</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725319509179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"added flycam + mouse grabbing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725340002967</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725340002967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"uncapped the framerate\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725342973119</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725342973119</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"larger average FPS sampling time\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343125586</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343125586</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"renamed action file to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343347163</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343347163</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"renamed action file to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343610704</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343610704</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"packed representation of models working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725600399804</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725600399804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"server is serving packed assets\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725605977985</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725605977985</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"don't try to return bad assets\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725642667514</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725642667514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"added libcurl\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725643956868</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725643956868</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"runtime/base assets split\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725837189628</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725837189628</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"25\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VCPKGProject\">\r\n    <isAutomaticCheckingOnLaunch value=\"false\" />\r\n    <isAutomaticFoundErrors value=\"true\" />\r\n    <isAutomaticReloadCMake value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"misc\" />\r\n    <MESSAGE value=\"fixed asset loading systems\" />\r\n    <MESSAGE value=\"working on autobuild\" />\r\n    <MESSAGE value=\"fixed --target parameter\" />\r\n    <MESSAGE value=\"added artifacts to autobuild\" />\r\n    <MESSAGE value=\"made autobuild artifacts more precise\" />\r\n    <MESSAGE value=\"renamed autobuild setup to &quot;Autobuild&quot;\" />\r\n    <MESSAGE value=\"[nobuild] allowed non rebuilding\" />\r\n    <MESSAGE value=\"added macOS autobuild\" />\r\n    <MESSAGE value=\"removed accidental bad platform pairs from  autobuild\" />\r\n    <MESSAGE value=\"removed more accidental bad platform pairs from  autobuild\" />\r\n    <MESSAGE value=\"use same compiler for c and c++ in autobuild\" />\r\n    <MESSAGE value=\"[nobuild] bye bye macos autobuild support\" />\r\n    <MESSAGE value=\"added input system\" />\r\n    <MESSAGE value=\"added flycam + mouse grabbing\" />\r\n    <MESSAGE value=\"uncapped the framerate\" />\r\n    <MESSAGE value=\"larger average FPS sampling time\" />\r\n    <MESSAGE value=\"renamed action file to autobuild\" />\r\n    <MESSAGE value=\"packed representation of models working\" />\r\n    <MESSAGE value=\"server is serving packed assets\" />\r\n    <MESSAGE value=\"don't try to return bad assets\" />\r\n    <MESSAGE value=\"added libcurl\" />\r\n    <MESSAGE value=\"runtime/base assets split\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"runtime/base assets split\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml b/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml
--- a/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml	(date 1726088025981)
@@ -24,10 +24,12 @@
       <config projectName="Hydrogen" targetName="ContinuousBuild" />
       <config projectName="Hydrogen" targetName="Experimental" />
       <config projectName="Hydrogen" targetName="libcurl_object" />
+      <config projectName="Hydrogen" targetName="loader_example" />
       <config projectName="Hydrogen" targetName="ContinuousStart" />
       <config projectName="Hydrogen" targetName="Nightly" />
       <config projectName="Hydrogen" targetName="ExperimentalMemCheck" />
       <config projectName="Hydrogen" targetName="ExperimentalSubmit" />
+      <config projectName="Hydrogen" targetName="yaml-cpp-parse" />
       <config projectName="Hydrogen" targetName="SDL2-static" />
       <config projectName="Hydrogen" targetName="imgui.cmake" />
       <config projectName="Hydrogen" targetName="ContinuousMemCheck" />
@@ -39,6 +41,8 @@
       <config projectName="Hydrogen" targetName="uninstall" />
       <config projectName="Hydrogen" targetName="libcurl_static" />
       <config projectName="Hydrogen" targetName="HydrogenCore" />
+      <config projectName="Hydrogen" targetName="yaml-cpp-read" />
+      <config projectName="Hydrogen" targetName="yaml-cpp-sandbox" />
       <config projectName="Hydrogen" targetName="HydrogenRuntime_Assets" />
       <config projectName="Hydrogen" targetName="ContinuousTest" />
       <config projectName="Hydrogen" targetName="ExperimentalConfigure" />
@@ -57,7 +61,6 @@
       <config projectName="Hydrogen" targetName="NightlyConfigure" />
       <config projectName="Hydrogen" targetName="glad" />
       <config projectName="Hydrogen" targetName="HydrogenServer" />
-      <config projectName="Hydrogen" targetName="SDL2" />
       <config projectName="Hydrogen" targetName="Continuous" />
       <config projectName="Hydrogen" targetName="NightlyCoverage" />
       <config projectName="Hydrogen" targetName="ExperimentalCoverage" />
@@ -71,48 +74,107 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b7057f5c-305f-4c98-9fc0-3c11825fbbe1" name="Changes" comment="added libcurl">
-      <change afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/log.h" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/core/include/core/log.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+    <list default="true" id="b7057f5c-305f-4c98-9fc0-3c11825fbbe1" name="Changes" comment="console autocomplete and history, added assets commands">
+      <change afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/terrain/canyon1.glb" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/assets/test_terrain1.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/runtime/assets/terrain/canyon1.glb" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/server/assets/test_terrain1.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/hydrogen.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/hydrogen.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/core/CMakeLists.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/box/Box.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/box/Box.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/box/Box0.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/AntiqueCamera.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/AntiqueCamera.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_camera_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_camera_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_camera_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_tripod_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_tripod_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_tripod_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/door/door.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/ducky/Duck.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/sofa/GlamVelvetSofa.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne_MetallicRoughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/include/core/asset.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/asset.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/include/core/assets.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/assets.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/include/core/runtimeassets.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/runtimeassets.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/include/core/runtimeconsole.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/runtimeconsole.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/actorspecasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/actorspecasset.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/include/core/systems/render/meshasset.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/systems/render/meshasset.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/src/asset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/asset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/assets.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/assets.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/engine.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/engine.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/project/project.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/project/project.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/src/runtimeassets.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/runtimeassets.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/runtimeconsole.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/runtimeconsole.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/runtimeengine.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/runtimeengine.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/scene.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/scene.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/src/systems/render/meshasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/render/meshasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/render/renderer.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/render/renderer.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/script/scriptasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/script/scriptasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/script/scripting.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/script/scripting.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/window.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/window.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/server/wrap/wrap.cc" beforeDir="false" afterPath="$PROJECT_DIR$/server/wrap/wrap.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/box/Box.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/box/Box.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/box/Box0.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/AntiqueCamera.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/AntiqueCamera.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_camera_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_camera_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_camera_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_tripod_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_tripod_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_tripod_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/door/door.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/ducky/Duck.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/sofa/GlamVelvetSofa.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne_MetallicRoughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/test_actor.yml" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/assets/test_actor.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/test_model2.yml" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/assets/test_model2.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/server/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/assets/test_model2.yml" beforeDir="false" afterPath="$PROJECT_DIR$/server/assets/test_model2.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/corewrap.py" beforeDir="false" afterPath="$PROJECT_DIR$/server/corewrap.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/hyassetserver.py" beforeDir="false" afterPath="$PROJECT_DIR$/server/hyassetserver.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -136,6 +198,7 @@
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="ROOT_SYNC" value="SYNC" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
   &quot;lastFilter&quot;: {
@@ -193,42 +256,42 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,
-    &quot;CMake Application.HydrogenEditor.executor&quot;: &quot;Debug&quot;,
-    &quot;CMake Application.HydrogenRuntime.executor&quot;: &quot;Run&quot;,
-    &quot;CMake Debug.Hydrogen.executor&quot;: &quot;Debug&quot;,
-    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
-    &quot;Python.main.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.RadMigrateCodeStyle&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;cf.advertisement.text.overridden&quot;: &quot;true&quot;,
-    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
-    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Projects/hydrogen/server/templates&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,
-    &quot;two.files.diff.last.used.file&quot;: &quot;C:/Projects/hydrogen/server/templates/status.html&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ASKED_ADD_EXTERNAL_FILES": "true",
+    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
+    "CMake Application.HydrogenEditor.executor": "Debug",
+    "CMake Application.HydrogenRuntime.executor": "Run",
+    "CMake Debug.Hydrogen.executor": "Debug",
+    "DefaultHtmlFileTemplate": "HTML File",
+    "Python.main.executor": "Run",
+    "RunOnceActivity.RadMigrateCodeStyle": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.cidr.known.project.marker": "true",
+    "RunOnceActivity.readMode.enableVisualFormatting": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "cf.advertisement.text.overridden": "true",
+    "cf.first.check.clang-format": "false",
+    "cidr.known.project.marker": "true",
+    "git-widget-placeholder": "dev",
+    "ignore.virus.scanning.warn.message": "true",
+    "last_opened_file_path": "C:/Projects/hydrogen/runtime/assets",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
+    "two.files.diff.last.used.file": "C:/Projects/hydrogen/server/templates/status.html",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Projects\hydrogen\runtime\assets" />
       <recent name="C:\Projects\hydrogen\server\templates" />
       <recent name="C:\Projects\hydrogen\server" />
       <recent name="C:\Projects\hydrogen\core\shaders\es" />
-      <recent name="C:\Projects\hydrogen\runtime\assets" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Projects\hydrogen\core\include\core" />
@@ -425,11 +488,6 @@
       </method>
     </configuration>
     <configuration name="SDL2-static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="SDL2-static" CONFIG_NAME="Debug-Visual Studio">
-      <method v="2">
-        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="SDL2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="SDL2" CONFIG_NAME="Debug-Visual Studio">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
@@ -465,6 +523,11 @@
       </method>
     </configuration>
     <configuration name="libcurl_static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="libcurl_static" CONFIG_NAME="Debug-Visual Studio">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="loader_example" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="loader_example" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="loader_example">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
@@ -484,6 +547,21 @@
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
     </configuration>
+    <configuration name="yaml-cpp-parse" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp-parse" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="yaml-cpp-parse">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="yaml-cpp-read" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp-read" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="yaml-cpp-read">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="yaml-cpp-sandbox" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp-sandbox" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="yaml-cpp-sandbox">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="yaml-cpp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp" CONFIG_NAME="Debug-Visual Studio">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
@@ -554,13 +632,16 @@
       <item itemvalue="CMake Application.angelscript" />
       <item itemvalue="CMake Application.glad" />
       <item itemvalue="CMake Application.imgui.cmake" />
-      <item itemvalue="CMake Application.SDL2" />
       <item itemvalue="CMake Application.libcurl_object" />
       <item itemvalue="CMake Application.libcurl_static" />
       <item itemvalue="CMake Application.sdl_headers_copy" />
       <item itemvalue="CMake Application.tinygltf" />
       <item itemvalue="CMake Application.uninstall" />
+      <item itemvalue="CMake Application.loader_example" />
       <item itemvalue="CMake Application.yaml-cpp" />
+      <item itemvalue="CMake Application.yaml-cpp-parse" />
+      <item itemvalue="CMake Application.yaml-cpp-read" />
+      <item itemvalue="CMake Application.yaml-cpp-sandbox" />
       <item itemvalue="Python.main" />
     </list>
     <recent_temporary>
@@ -589,7 +670,7 @@
       <workItem from="1725585006797" duration="1178000" />
       <workItem from="1725591940685" duration="53051000" />
       <workItem from="1725946168594" duration="2007000" />
-      <workItem from="1725948695615" duration="4497000" />
+      <workItem from="1725948695615" duration="13285000" />
     </task>
     <task id="LOCAL-00001" summary="misc">
       <option name="closed" value="true" />
@@ -783,7 +864,15 @@
       <option name="project" value="LOCAL" />
       <updated>1725837189628</updated>
     </task>
-    <option name="localTasksCounter" value="25" />
+    <task id="LOCAL-00025" summary="console autocomplete and history, added assets commands">
+      <option name="closed" value="true" />
+      <created>1725953305314</created>
+      <option name="number" value="00025" />
+      <option name="presentableId" value="LOCAL-00025" />
+      <option name="project" value="LOCAL" />
+      <updated>1725953305314</updated>
+    </task>
+    <option name="localTasksCounter" value="26" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -818,7 +907,19 @@
     <MESSAGE value="don't try to return bad assets" />
     <MESSAGE value="added libcurl" />
     <MESSAGE value="runtime/base assets split" />
-    <option name="LAST_COMMIT_MESSAGE" value="runtime/base assets split" />
+    <MESSAGE value="console autocomplete and history, added assets commands" />
+    <option name="LAST_COMMIT_MESSAGE" value="console autocomplete and history, added assets commands" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
+          <url>file://$PROJECT_DIR$/core/include/core/runtimeassets.h</url>
+          <line>100</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#pragma once\r\n\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n#include <string>\r\n#include <thread>\r\n#include <type_traits>  // grumble grumble\r\n#include <unordered_map>\r\n\r\n#include \"SDL.h\"\r\n#include \"yaml-cpp/yaml.h\"\r\n\r\n#include \"core/actorspecasset.h\"\r\n#include \"core/assetindex.h\"\r\n#include \"core/log.h\"\r\n#include \"core/project/projectassetentry.h\"\r\n#include \"core/scenespecasset.h\"\r\n#include \"core/systems/render/meshasset.h\"\r\n#include \"core/systems/script/scriptasset.h\"\r\n\r\n#define TYPED_SWITCH_CASE(type, func, ...) \\\r\n    case type::getTypeId(): {              \\\r\n        func<type>(__VA_ARGS__);           \\\r\n        break;                             \\\r\n    }\r\n\r\n#define CALL_TYPED_FUNC_WITH_ASSET_ID(id, func, ...)                         \\\r\n    switch ((id)) {                                                          \\\r\n        TYPED_SWITCH_CASE(h_core::SceneSpecAsset, func, ##__VA_ARGS__);      \\\r\n        TYPED_SWITCH_CASE(h_core::ActorSpecAsset, func, ##__VA_ARGS__);      \\\r\n        TYPED_SWITCH_CASE(h_core::script::ScriptAsset, func, ##__VA_ARGS__); \\\r\n        TYPED_SWITCH_CASE(h_core::render::MeshAsset, func, ##__VA_ARGS__);   \\\r\n    }\r\n\r\n#define ASSERT_TYPE_IS_ASSET_TYPE(type, error_msg) static_assert(std::is_base_of_v<h_core::Asset, type>, error_msg)\r\n\r\n#define ASSETS_LOAD_FAIL_CANT_OPEN_FILE 1\r\n#define ASSETS_LOAD_FAIL_FILE_TOO_BIG   2\r\n\r\n#define ASSETS_MAX_ASSET_COUNT 128\r\n\r\nnamespace h_core {\r\ntypedef uint32_t AssetHash;\r\n\r\nnamespace project {\r\nclass Project;\r\n}\r\n\r\n// Base class for all sources of assets (packed/unpacked)\r\nclass Assets {\r\n  public:\r\n    Assets() = default;\r\n\r\n    void loadFromProject(const h_core::project::Project* project);\r\n\r\n    /// @brief convert the name of an asset to its hash\r\n    /// @param string the string to convert (asset name)\r\n    /// @return the hash\r\n    static AssetHash getAssetHashFromString(const std::string& string);\r\n\r\n    /// @brief loads or retrieves an asset index by its name.\r\n    /// @tparam AssetType the asset type to load (base class h_core::Asset)\r\n    /// @param filePath the path to load\r\n    /// @return the asset index (permanent)\r\n    template<typename AssetType>\r\n    h_core::AssetIndex getOrLoadAsset(std::string filePath);\r\n\r\n    /// @brief Get an asset by its index. Note that this pointer is only valid\r\n    /// until the assets are updated again; hold on to an AssetIndex instead.\r\n    /// @tparam AssetType the asset type to load (base class h_core::Asset)\r\n    /// @param index the index to load\r\n    /// @return a pointer (not managed by you!) to the asset\r\n    template<typename AssetType>\r\n    AssetType* getAssetByIndex(h_core::AssetIndex index) const;\r\n\r\n    uint32_t getAssetCount() const;\r\n\r\n  protected:\r\n    template<typename AssetType>\r\n    h_core::AssetIndex loadAssetFromFile(AssetType* out_asset, std::string filePath);\r\n\r\n    template<typename AssetType>\r\n    void loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile);\r\n\r\n    h_core::Asset* m_assets[ASSETS_MAX_ASSET_COUNT] = {};\r\n    std::unordered_map<h_core::AssetHash, h_core::AssetIndex> m_assetIndexMap {};  // hash -> asset index\r\n    h_core::AssetIndex m_nextAssetIndex = 0;\r\n    uint32_t m_assetCount = 0;\r\n};\r\n}  // namespace h_core\r\n\r\ntemplate<typename AssetType>\r\nuint32_t h_core::Assets::loadAssetFromFile(AssetType* out_asset, std::string filePath) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't load asset type that does not derive from Asset\");\r\n\r\n    // Load file\r\n    const char* fileText = (const char*)SDL_LoadFile(filePath.c_str(), nullptr);\r\n\r\n    // Parse YAML and load asset\r\n    YAML::Node yaml = YAML::Load(fileText);\r\n    out_asset->initFromYaml(this, yaml);\r\n\r\n    m_assetCount++;\r\n\r\n    return 0;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nh_core::AssetIndex h_core::Assets::getOrLoadAsset(std::string filePath) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't load asset type that does not derive from Asset\");\r\n\r\n    // TODO: This hashing piece to the loading can probably be removed\r\n    h_core::AssetHash hash = getAssetHashFromString(filePath);\r\n    if (m_assetIndexMap.count(hash) > 0) {\r\n        // Load existing asset\r\n        h_core::AssetIndex assetIndex = m_assetIndexMap[hash];\r\n        return assetIndex;\r\n    }\r\n    else {\r\n        // Load new asset\r\n        h_core::AssetIndex assetIndex = m_nextAssetIndex++;\r\n        AssetType* asset = new AssetType();\r\n        uint32_t result = loadAssetFromFile<AssetType>(asset, filePath);\r\n        if (result != 0) {\r\n            HYLOG_ERROR(\"ASSETS: Failed to load asset %s\\n\", filePath.c_str());\r\n            return ASSET_INDEX_BAD;\r\n        }\r\n        else {\r\n            m_assets[assetIndex] = asset;\r\n            m_assetIndexMap[hash] = assetIndex;\r\n            return assetIndex;\r\n        }\r\n    }\r\n\r\n    return ASSET_INDEX_BAD;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nAssetType* h_core::Assets::getAssetByIndex(h_core::AssetIndex index) const {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    if (index == ASSET_INDEX_BAD) return nullptr;\r\n\r\n    return static_cast<AssetType*>(m_assets[index]);\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::Assets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    // Load from file\r\n    AssetType* asset = new AssetType();\r\n    loadAssetFromFile<AssetType>(asset, assetFile);\r\n    m_assets[assetIndex] = asset;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h b/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h
--- a/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h	(date 1726083665960)
@@ -148,6 +148,8 @@
 void h_core::Assets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile) {
     ASSERT_TYPE_IS_ASSET_TYPE(AssetType, "Can't get asset type that does not derive from Asset");
 
+    HYLOG_INFO("ASSETS: Loading asset index %d...", assetIndex);
+
     // Load from file
     AssetType* asset = new AssetType();
     loadAssetFromFile<AssetType>(asset, assetFile);
Index: core/src/runtimeassets.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by angus.goucher on 9/8/2024.\r\n//\r\n\r\n#include \"core/runtimeassets.h\"\r\n\r\n#include \"imgui.h\"\r\n\r\n#include \"core/log.h\"\r\n#include \"core/project/project.h\"\r\n#include \"core/theming/guicolors.h\"\r\n\r\nvoid h_core::RuntimeAssets::init(const std::string& serverAddress) {\r\n    curl_global_init(CURL_GLOBAL_ALL);\r\n\r\n    m_serverAddress = serverAddress;\r\n\r\n    m_netRequestThreadContext.pingServerAddress = serverAddress;\r\n    m_netRequestThreadContext.netRequestThreadAlive = false;\r\n    m_netRequestThread = std::thread { netRequestThreadFunction, &m_netRequestThreadContext };\r\n}\r\n\r\nuint32_t h_core::RuntimeAssets::command_loadAsset(const std::string& arguments, void* data) {\r\n    h_core::RuntimeAssets* assets = (h_core::RuntimeAssets*)data;\r\n    RUNTIMECONSOLE_PARSE_ARGS(arguments, yaml);\r\n\r\n    uint32_t assetType = yaml[\"type\"].as<uint32_t>(UINT32_MAX);\r\n    uint32_t assetIndex = yaml[\"index\"].as<uint32_t>(ASSET_INDEX_BAD);\r\n    std::string assetPath = yaml[\"path\"].as<std::string>(\"\");\r\n    bool isRemote = yaml[\"remote\"].as<bool>(false);\r\n\r\n    if (assetType == UINT32_MAX) { return 2; }\r\n    if (assetIndex == ASSET_INDEX_BAD) { return 3; }\r\n    if (assetPath.empty() && !isRemote) { return 4; }\r\n\r\n    CALL_TYPED_FUNC_WITH_ASSET_ID(assetType, assets->loadAsset, assetIndex, assetPath, isRemote);\r\n\r\n    return 0;\r\n}\r\n\r\nvoid h_core::RuntimeAssets::registerCommands(h_core::RuntimeConsole* console) {\r\n    console->newCommandWithHelp(\r\n        \"loadAsset\", h_core::RuntimeAssets::command_loadAsset, this,\r\n        \"{ type: int, index: int, path: string, remote: bool } load an asset of type 'type' into index 'index' from either path 'path' or from the server if 'remote'\");\r\n}\r\n\r\nvoid h_core::RuntimeAssets::destroy() {\r\n    m_netRequestThreadContext.netRequestThreadAlive = true;\r\n    m_netRequestThread.join();\r\n}\r\n\r\nvoid h_core::RuntimeAssets::doGUI() {\r\n    if (ImGui::Begin(\"Runtime Assets Debugger\")) {\r\n        ImGui::PushStyleColor(ImGuiCol_ChildBg, hasServerConnection() ? IMGUI_COLOR_GOOD : IMGUI_COLOR_WARN);\r\n        ImGui::PushStyleColor(ImGuiCol_Text, ImVec4 { 0, 0, 0, 0.5 });\r\n        constexpr float statusAreaHeight = 50;\r\n        ImGui::BeginChild(\"Server Status\", ImVec2 { 0, statusAreaHeight });\r\n        {\r\n            const char* text = hasServerConnection() ? \"CONNECTED TO SERVER\" : \"NOT CONNECTED TO SERVER\";\r\n            ImVec2 textSize = ImGui::CalcTextSize(text);\r\n            float windowW = ImGui::GetWindowWidth();\r\n            float windowH = ImGui::GetWindowHeight();\r\n            ImGui::SetCursorPosX(windowW / 2.f - textSize.x / 2.f);\r\n            ImGui::SetCursorPosY(windowH / 2.f - textSize.y / 2.f);\r\n            ImGui::Text(text);\r\n        }\r\n        ImGui::EndChild();\r\n        ImGui::PopStyleColor();\r\n        ImGui::PopStyleColor();\r\n\r\n        ImGui::Separator();\r\n\r\n        if (ImGui::CollapsingHeader(\"Recent Net Request Jobs\")) {\r\n            ImGui::Indent();\r\n            uint32_t jobIndex = 0;\r\n            for (NetRequestJob job : m_recentJobs) {\r\n                ImGui::PushID(jobIndex);\r\n                std::string headerText =\r\n                    \"Request #\" + std::to_string(jobIndex) + \" (Asset #\" + std::to_string(job.assetIndex) + \")\";\r\n                if (ImGui::CollapsingHeader(headerText.c_str())) {\r\n                    ImGui::Text(\"Asset Index: %d\", job.assetIndex);\r\n                    ImGui::Text(\"Asset Type: %d\", job.assetType);\r\n                    ImGui::Text(\"Server Address: %s\", job.serverAddress.c_str());\r\n                }\r\n                ImGui::PopID();\r\n                jobIndex++;\r\n            }\r\n            ImGui::Unindent();\r\n        }\r\n    }\r\n    ImGui::End();\r\n}\r\n\r\nvoid h_core::RuntimeAssets::loadFromProject(const h_core::project::Project* project) {\r\n    for (const h_core::project::ProjectAssetEntry& assetInfo : project->requiredAssets) {\r\n        CALL_TYPED_FUNC_WITH_ASSET_ID(\r\n            assetInfo.typeId, RuntimeAssets::loadAsset, assetInfo.index, assetInfo.assetPath, assetInfo.isRemote);\r\n    }\r\n}\r\n\r\nvoid h_core::RuntimeAssets::precompile(h_core::RuntimeSystems* systems) {\r\n    for (int assetIndex = 0; assetIndex < ASSETS_MAX_ASSET_COUNT; ++assetIndex) {\r\n        h_core::Asset* asset = m_assets[assetIndex];\r\n        if (asset != nullptr) { asset->precompile(systems); }\r\n    }\r\n}\r\n\r\nvoid h_core::RuntimeAssets::flushAndPrecompileNetAssets(h_core::RuntimeSystems* systems) {\r\n    m_netRequestThreadContext.resultQueueLock.lock();\r\n\r\n    while (!m_netRequestThreadContext.results.empty()) {\r\n        h_core::NetRequestResult result = m_netRequestThreadContext.results.front();\r\n\r\n        if (result.success) {\r\n            // Replace old asset\r\n            if (m_assets[result.job.assetIndex] != nullptr) { delete m_assets[result.job.assetIndex]; }\r\n            m_assets[result.job.assetIndex] = result.newAsset;\r\n            result.newAsset->precompile(systems);\r\n        }\r\n        else {\r\n            // Re-queue new asset request\r\n            CALL_TYPED_FUNC_WITH_ASSET_ID(result.job.assetType, RuntimeAssets::requestNetAsset, result.job.assetIndex);\r\n        }\r\n\r\n        m_netRequestThreadContext.results.pop_front();\r\n    }\r\n\r\n    m_netRequestThreadContext.resultQueueLock.unlock();\r\n}\r\n\r\nvoid h_core::RuntimeAssets::netRequestThreadFunction(h_core::NetRequestThreadContext* context) {\r\n    HYLOG_INFO(\"ASSETS: Net request thread running!\\n\");\r\n\r\n    while (!context->netRequestThreadAlive) {\r\n        // Do jobs if needed\r\n        if (!context->jobs.empty()) {\r\n            // Request asset\r\n            NetRequestJob job = context->jobs.front();\r\n            HYLOG_INFO(\"ASSETS: THREAD: got job request for asset %d\\n\", job.assetIndex);\r\n            h_core::Asset* newAsset = nullptr;\r\n            CURLcode result;\r\n            CALL_TYPED_FUNC_WITH_ASSET_ID(\r\n                job.assetType, h_core::RuntimeAssets::requestNetAssetNow, &newAsset, &result, job.serverAddress,\r\n                job.assetIndex);\r\n            HYLOG_INFO(\"ASSETS: THREAD: completed net request for asset %d\\n\", job.assetIndex);\r\n\r\n            // Apply to asset list\r\n            HYLOG_INFO(\"ASSETS: THREAD: awaiting asset list access... \\n\", job.assetIndex);\r\n            context->resultQueueLock.lock();\r\n            {\r\n                // Add result to the return list\r\n                if (newAsset == nullptr) { context->results.emplace_back(nullptr, job, false); }\r\n                else { context->results.emplace_back(newAsset, job, true); }\r\n            }\r\n            context->resultQueueLock.unlock();\r\n            HYLOG_INFO(\"ASSETS: THREAD: updated asset list \\n\", job.assetIndex);\r\n\r\n            // remove job\r\n            context->jobs.pop_front();\r\n        }\r\n\r\n        // Update connection test\r\n        CURL* connectTest = curl_easy_init();\r\n        curl_easy_setopt(connectTest, CURLOPT_URL, context->pingServerAddress.c_str());\r\n        curl_easy_setopt(connectTest, CURLOPT_CONNECT_ONLY, 1L);\r\n        CURLcode result = curl_easy_perform(connectTest);\r\n        if (result != CURLE_OK && result != CURLE_COULDNT_CONNECT) {\r\n            HYLOG_WARN(\"ASSETS: Ping attempt returned curl error code %d\\n\", result);\r\n        }\r\n        context->hasServerConnection = result == CURLE_OK;\r\n    }\r\n\r\n    HYLOG_INFO(\"ASSETS: Killing net request thread...\\n\");\r\n}\r\n\r\nbool h_core::RuntimeAssets::hasServerConnection() {\r\n    return m_netRequestThreadContext.hasServerConnection;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/runtimeassets.cc b/core/src/runtimeassets.cc
--- a/core/src/runtimeassets.cc	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/core/src/runtimeassets.cc	(date 1726086812437)
@@ -87,6 +87,21 @@
             }
             ImGui::Unindent();
         }
+
+        if (ImGui::CollapsingHeader("Asset List")) {
+            ImGui::Indent();
+            uint32_t assetIndex = 0;
+            for (h_core::Asset* asset : m_assets) {
+                if (asset != nullptr) {
+                    std::string header = "Asset " + std::to_string(assetIndex);
+                    if (ImGui::CollapsingHeader(header.c_str())) {
+                        asset->doGUI();
+                    }
+                }
+                assetIndex++;
+            }
+            ImGui::Unindent();
+        }
     }
     ImGui::End();
 }
Index: core/include/core/runtimeassets.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by angus.goucher on 9/8/2024.\r\n//\r\n\r\n#pragma once\r\n\r\n#include \"SDL.h\"\r\n\r\n#include \"curl/curl.h\"\r\n\r\n#include \"core/assets.h\"\r\n#include \"core/netrequestthreadcontext.h\"\r\n#include \"core/runtimeconsole.h\"\r\n\r\n#define RUNTIMEASSETS_MAX_RECENT_JOBS 10\r\n\r\nnamespace h_core {\r\nclass RuntimeAssets : public Assets {\r\n  public:\r\n    RuntimeAssets() = default;\r\n\r\n    void init(const std::string& serverAddress);\r\n    void registerCommands(h_core::RuntimeConsole* console);\r\n    void destroy();\r\n    void doGUI();\r\n\r\n    void loadFromProject(const h_core::project::Project* project);\r\n    void precompile(h_core::RuntimeSystems* systems);\r\n    void flushAndPrecompileNetAssets(h_core::RuntimeSystems* systems);\r\n\r\n    template<typename AssetType>\r\n    void requestNetAsset(h_core::AssetIndex index);\r\n\r\n    static void netRequestThreadFunction(h_core::NetRequestThreadContext* context);\r\n\r\n    bool hasServerConnection();\r\n\r\n    template<typename AssetType>\r\n    void loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile, bool isRemote);\r\n\r\n  private:\r\n    template<typename AssetType>\r\n    static void requestNetAssetNow(\r\n        h_core::Asset** out_assetPtr, CURLcode* out_error, const std::string& serverAddress, h_core::AssetIndex index);\r\n\r\n    static uint32_t command_loadAsset(const std::string& arguments, void* data);\r\n\r\n    std::string m_serverAddress {};\r\n    std::thread m_netRequestThread {};\r\n    std::deque<h_core::NetRequestJob> m_recentJobs {};\r\n    h_core::NetRequestThreadContext m_netRequestThreadContext {};\r\n};\r\n}  // namespace h_core\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::RuntimeAssets::requestNetAsset(h_core::AssetIndex index) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't request non-asset type.\");\r\n\r\n    NetRequestJob job { m_serverAddress, index, AssetType::getTypeId() };\r\n\r\n    m_netRequestThreadContext.jobQueueLock.lock();\r\n    { m_netRequestThreadContext.jobs.push_back(job); }\r\n    m_netRequestThreadContext.jobQueueLock.unlock();\r\n\r\n    m_recentJobs.push_back(job);\r\n    if (m_recentJobs.size() > RUNTIMEASSETS_MAX_RECENT_JOBS) m_recentJobs.pop_front();\r\n}\r\n\r\ntemplate<typename AssetType>\r\nsize_t netAssetWrite(void* buffer, size_t pieceSize, size_t pieceCount, void* out_asset) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't netload asset type that does not inherit from Asset\");\r\n\r\n    AssetType* asset = new AssetType();\r\n    size_t byteCount = pieceSize * pieceCount;\r\n    asset->fromPacked(buffer, byteCount);\r\n    *(AssetType**)out_asset = asset;\r\n\r\n    HYLOG_DEBUG(\"ASSETS: Net asset write %d bytes\\n\", byteCount);\r\n\r\n    return byteCount;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::RuntimeAssets::requestNetAssetNow(\r\n    h_core::Asset** out_assetPtr, CURLcode* out_error, const std::string& serverAddress, h_core::AssetIndex index) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't request non-asset type.\");\r\n\r\n    CURL* netHandle = curl_easy_init();\r\n    std::string url = serverAddress + std::string(\"asset/\") + std::to_string(index);\r\n    HYLOG_INFO(\"ASSETS: Requesting %s...\\n\", url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_URL, (void*)url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEFUNCTION, &netAssetWrite<AssetType>);\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEDATA, out_assetPtr);\r\n    curl_easy_setopt(netHandle, CURLOPT_CONNECTTIMEOUT, 0.5);\r\n    CURLcode result = curl_easy_perform(netHandle);\r\n    if (result != CURLE_OK) { HYLOG_WARN(\"ASSETS: Curl (asset %d) (error code %d): %s\\n\", index, result, curl_easy_strerror(result)); }\r\n    else { HYLOG_INFO(\"ASSETS: Curled asset %d OK\\n\", index); }\r\n    if (out_error != nullptr) *out_error = result;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::RuntimeAssets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile, bool isRemote) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    if (isRemote) {\r\n        // Load from server\r\n        requestNetAsset<AssetType>(assetIndex);\r\n    }\r\n    else {\r\n        // Load from file\r\n        AssetType* asset = new AssetType();\r\n        loadAssetFromFile<AssetType>(asset, assetFile);\r\n        m_assets[assetIndex] = asset;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/include/core/runtimeassets.h b/core/include/core/runtimeassets.h
--- a/core/include/core/runtimeassets.h	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/core/include/core/runtimeassets.h	(date 1726083695654)
@@ -102,6 +102,8 @@
 void h_core::RuntimeAssets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile, bool isRemote) {
     ASSERT_TYPE_IS_ASSET_TYPE(AssetType, "Can't get asset type that does not derive from Asset");
 
+    HYLOG_INFO("RUNTIME ASSETS: Loading asset index %d...", assetIndex);
+
     if (isRemote) {
         // Load from server
         requestNetAsset<AssetType>(assetIndex);
Index: android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"core/systems/render/meshasset.h\"\r\n\r\n#include <string>\r\n\r\n#include \"SDL2/SDL.h\"\r\n#include \"glad/glad.h\"\r\n\r\n#include \"core/log.h\"\r\n#include \"core/systems/render/renderer.h\"\r\n\r\n// TODO: move these godless monstrosities to a subf\r\n\r\nstatic h_core::render::Vertex cubeVertices[] = {\r\n    { h_core::math::Vector3(-1.0f, 1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, 1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(-1.0f, -1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, -1.0f, 1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(-1.0f, 1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, 1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(-1.0f, -1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n    { h_core::math::Vector3(1.0f, -1.0f, -1.0f), h_core::math::Vector3(0), h_core::math::Vector2(0) },\r\n};\r\nstatic const uint16_t cubeTriList[] = {\r\n    0, 1, 2,           // 0\r\n    1, 3, 2, 4, 6, 5,  // 2\r\n    5, 6, 7, 0, 2, 4,  // 4\r\n    4, 2, 6, 1, 5, 3,  // 6\r\n    5, 7, 3, 0, 4, 1,  // 8\r\n    4, 5, 1, 2, 3, 6,  // 10\r\n    6, 3, 7,\r\n};\r\n\r\n\r\nuint32_t h_core::render::MeshAsset::initFromYaml(h_core::Assets* assets, YAML::Node yaml) {\r\n    HYLOG_INFO(\"MESH: loading model from YAML spec...\\n\");\r\n\r\n    // Parse YAML\r\n    std::string gltfFilePath = yaml[\"gltf\"].as<std::string>(\"\");\r\n    std::string gltfBasePath = yaml[\"gltf_base_path\"].as<std::string>(\"\");\r\n    bool gltfBinaryMode = yaml[\"gltf_binary\"].as<bool>(false);\r\n    m_isCube = yaml[\"primitive\"].as<bool>(false);\r\n\r\n    if (gltfFilePath.empty()) {\r\n        HYLOG_ERROR(\"MODEL: no gltf key in model YAML\\n\");\r\n        return MODEL_INIT_FAIL_BAD_GLTF_FILE_PATH;\r\n    }\r\n\r\n    // Load model\r\n    tinygltf::TinyGLTF loader {};\r\n    std::string errorText {};\r\n    std::string warningText {};\r\n\r\n    bool success;\r\n    if (!gltfBinaryMode) {\r\n        size_t gltfTextLength;\r\n        const char* gltfText = (const char*)SDL_LoadFile(gltfFilePath.c_str(), &gltfTextLength);\r\n        success =\r\n            loader.LoadASCIIFromString(&m_model, &errorText, &warningText, gltfText, gltfTextLength, gltfBasePath);\r\n    }\r\n    else {\r\n        size_t glbDataLength;\r\n        const uint8_t* glbData = (const uint8_t*)SDL_LoadFile(gltfFilePath.c_str(), &glbDataLength);\r\n        success = loader.LoadBinaryFromMemory(&m_model, &errorText, &warningText, glbData, glbDataLength, gltfBasePath);\r\n    }\r\n\r\n    if (!warningText.empty()) { HYLOG_WARN(\"MODEL: %s\\n\", warningText.c_str()); }\r\n\r\n    if (!success) {\r\n        HYLOG_ERROR(\"MODEL: %s\\n\", errorText.c_str());\r\n        HYLOG_ERROR(\r\n            \"MODEL: gltfFilePath = %s, gltfBasePath = %s, gltfBinaryMode = %s\\n\", gltfFilePath.c_str(),\r\n            gltfBasePath.c_str(), gltfBinaryMode ? \"YES\" : \"NO\");\r\n        return MODEL_INIT_FAIL_BAD_GLTF;\r\n    }\r\n\r\n    // TODO: VERY TESTING. MUCH WOW\r\n    tinygltf::Node node = m_model.nodes.front();\r\n    tinygltf::Mesh mesh = m_model.meshes[node.mesh];\r\n    tinygltf::Primitive primitiveInfo = mesh.primitives.front();\r\n    m_primitiveMode = primitiveInfo.mode;\r\n\r\n    // pos attribute\r\n    uint32_t posAccessorIndex = primitiveInfo.attributes[\"POSITION\"];\r\n    tinygltf::Accessor posAccessor = m_model.accessors[posAccessorIndex];\r\n    tinygltf::BufferView posBufferView = m_model.bufferViews[posAccessor.bufferView];\r\n    const uint8_t* posBuffer = m_model.buffers[posBufferView.buffer].data.data() + posBufferView.byteOffset;\r\n\r\n    // normal attribute\r\n    uint32_t normalAccessorIndex = primitiveInfo.attributes[\"NORMAL\"];\r\n    tinygltf::Accessor normalAccessor = m_model.accessors[normalAccessorIndex];\r\n    tinygltf::BufferView normalBufferView = m_model.bufferViews[normalAccessor.bufferView];\r\n    const uint8_t* normalBuffer = m_model.buffers[normalBufferView.buffer].data.data() + normalBufferView.byteOffset;\r\n\r\n    // uv attribute\r\n    uint32_t texCoordAccessorIndex = primitiveInfo.attributes[\"TEXCOORD_0\"];\r\n    tinygltf::Accessor texCoordAccessor = m_model.accessors[texCoordAccessorIndex];\r\n    tinygltf::BufferView texCoordBufferView = m_model.bufferViews[texCoordAccessor.bufferView];\r\n    const uint8_t* texCoordBuffer =\r\n        m_model.buffers[texCoordBufferView.buffer].data.data() + texCoordBufferView.byteOffset;\r\n\r\n    // load vertex data\r\n    m_numVertices = posAccessor.count;\r\n    m_vertices = new h_core::render::Vertex[m_numVertices] {};\r\n\r\n    for (uint32_t vertexIndex = 0; vertexIndex < m_numVertices; vertexIndex++) {\r\n        h_core::render::Vertex* vertex = &m_vertices[vertexIndex];\r\n        vertex->position = reinterpret_cast<const h_core::math::Vector3*>(posBuffer)[vertexIndex];\r\n        vertex->normal = reinterpret_cast<const h_core::math::Vector3*>(normalBuffer)[vertexIndex];\r\n        vertex->texCoord = reinterpret_cast<const h_core::math::Vector2*>(texCoordBuffer)[vertexIndex];\r\n    }\r\n\r\n    // load index buffer\r\n    uint32_t indexBufferAccessorIndex = primitiveInfo.indices;\r\n    tinygltf::Accessor indexBufferAccessor = m_model.accessors[indexBufferAccessorIndex];\r\n    tinygltf::BufferView indexBufferView = m_model.bufferViews[indexBufferAccessor.bufferView];\r\n    m_numIndices = indexBufferAccessor.count;\r\n\r\n    // determine index type\r\n    switch (indexBufferAccessor.componentType) {\r\n        case 5121:\r\n            m_meshIndexType = h_core::render::MeshIndexType::BYTE;\r\n            break;\r\n        case 5123:\r\n            m_meshIndexType = h_core::render::MeshIndexType::SHORT;\r\n            break;\r\n        case 5125:\r\n            m_meshIndexType = h_core::render::MeshIndexType::INT;\r\n            break;\r\n\r\n        default:\r\n            return MODEL_INIT_FAIL_INVALID_INDEX_DATA_TYPE;\r\n    }\r\n\r\n    m_indices = m_model.buffers[indexBufferView.buffer].data.data() + indexBufferView.byteOffset;\r\n\r\n    return 0;\r\n}\r\n\r\nuint32_t h_core::render::MeshAsset::precompile(h_core::RuntimeSystems* systems) {\r\n    if (m_isCube) {\r\n        // Just load cube\r\n        HYLOG_DEBUG(\"MESH: Loading cube primitive mesh\\n\");\r\n        loadModel(8, cubeVertices, 36, cubeTriList, h_core::render::MeshIndexType::SHORT, systems->renderer->isGles3());\r\n\r\n        return 0;\r\n    }\r\n\r\n    loadModel(m_numVertices, m_vertices, m_numIndices, m_indices, m_meshIndexType, systems->renderer->isGles3());\r\n\r\n    HYLOG_INFO(\"MESH: Loaded %zu vertices (%zu indices)\\n\", m_numVertices, m_numIndices);\r\n\r\n    return 0;\r\n}\r\n\r\nvoid h_core::render::MeshAsset::loadModel(\r\n    uint32_t vertexBufferCount, const h_core::render::Vertex* vertexBuffer, uint32_t inidicesCount,\r\n    const void* indexBuffer, MeshIndexType indexType, bool useGles3) {\r\n    // Generate buffers and load attributes\r\n    if (!useGles3) {\r\n        ::glGenVertexArrays(1, &m_vertexAttributesHandle);\r\n        ::glBindVertexArray(m_vertexAttributesHandle);\r\n    }\r\n\r\n    HYLOG_DEBUG(\"MESH: using VAO id %d\\n\", m_vertexAttributesHandle);\r\n\r\n    ::glGenBuffers(1, &m_vertexBufferHandle);\r\n    ::glBindBuffer(GL_ARRAY_BUFFER, m_vertexBufferHandle);\r\n\r\n    ::glGenBuffers(1, &m_indexBufferHandle);\r\n    ::glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, m_indexBufferHandle);\r\n\r\n    ::glVertexAttribPointer(\r\n        0, 3, GL_FLOAT, GL_FALSE, sizeof(h_core::render::Vertex),\r\n        (const void*)offsetof(h_core::render::Vertex, position));\r\n    ::glEnableVertexAttribArray(0);\r\n\r\n    ::glVertexAttribPointer(\r\n        1, 3, GL_FLOAT, GL_FALSE, sizeof(h_core::render::Vertex),\r\n        (const void*)offsetof(h_core::render::Vertex, normal));\r\n    ::glEnableVertexAttribArray(1);\r\n\r\n    ::glVertexAttribPointer(\r\n        2, 2, GL_FLOAT, GL_FALSE, sizeof(h_core::render::Vertex),\r\n        (const void*)offsetof(h_core::render::Vertex, texCoord));\r\n    ::glEnableVertexAttribArray(2);\r\n\r\n    // Bind the vertex and index buffers to this VAO\r\n    ::glBindBuffer(GL_ARRAY_BUFFER, m_vertexBufferHandle);\r\n    ::glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, m_indexBufferHandle);\r\n\r\n    // Mark buffers for static drawing (not updated)\r\n    if (vertexBufferCount > 0) {\r\n        ::glBufferData(\r\n            GL_ARRAY_BUFFER, sizeof(h_core::render::Vertex) * vertexBufferCount, vertexBuffer, GL_STATIC_DRAW);\r\n    }\r\n\r\n    if (inidicesCount > 0) {\r\n        // Determine index type size\r\n        size_t indexTypeSize = 0;\r\n        switch (indexType) {\r\n            case MeshIndexType::BYTE:\r\n                indexTypeSize = sizeof(unsigned char);\r\n                break;\r\n            case MeshIndexType::SHORT:\r\n                indexTypeSize = sizeof(unsigned short);\r\n                break;\r\n            case MeshIndexType::INT:\r\n                indexTypeSize = sizeof(unsigned int);\r\n                break;\r\n            default:\r\n                HYLOG_ERROR(\"Undefined mesh index type value\\n\");\r\n                break;\r\n        }\r\n\r\n        ::glBufferData(GL_ELEMENT_ARRAY_BUFFER, indexTypeSize * inidicesCount, indexBuffer, GL_STATIC_DRAW);\r\n    }\r\n\r\n    // Store buffer sizes\r\n    m_numVertices = vertexBufferCount;\r\n    m_numIndices = inidicesCount;\r\n    m_meshIndexType = indexType;\r\n\r\n    // Clean up\r\n    if (!useGles3) { ::glBindVertexArray(0); }\r\n    ::glBindBuffer(GL_ARRAY_BUFFER, 0);\r\n    ::glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);\r\n}\r\n\r\n\r\nGLuint h_core::render::MeshAsset::getIndexBufferHandle() const {\r\n    return m_indexBufferHandle;\r\n}\r\n\r\nGLuint h_core::render::MeshAsset::getVertexAttributesHandle() const {\r\n    return m_vertexAttributesHandle;\r\n}\r\n\r\nGLuint h_core::render::MeshAsset::getVertexBufferHandle() const {\r\n    return m_vertexBufferHandle;\r\n}\r\n\r\nsize_t h_core::render::MeshAsset::getNumVertices() const {\r\n    return m_numVertices;\r\n}\r\n\r\nsize_t h_core::render::MeshAsset::getNumIndices() const {\r\n    return m_numIndices;\r\n}\r\n\r\nh_core::render::MeshIndexType h_core::render::MeshAsset::getMeshIndexType() const {\r\n    return m_meshIndexType;\r\n}\r\n\r\nuint32_t h_core::render::MeshAsset::getPrimitiveMode() const {\r\n    return m_primitiveMode;\r\n}\r\n\r\nstd::vector<char>* h_core::render::MeshAsset::toPacked() {\r\n    std::vector<char>* bytes = new std::vector<char>();\r\n    bytes->reserve(m_numVertices + m_numIndices + 2);  // Try to keep in sync with actual byte requirements\r\n\r\n    bytes->insert(bytes->end(), (char*)&m_numVertices, (char*)&m_numVertices + sizeof(uint32_t));\r\n    bytes->insert(\r\n        bytes->end(), (char*)m_vertices, (char*)(m_vertices) + (m_numVertices * sizeof(h_core::render::Vertex)));\r\n    bytes->insert(bytes->end(), (char*)&m_numIndices, (char*)&m_numIndices + sizeof(uint32_t));\r\n    uint32_t indexSize = 1;\r\n    switch (m_meshIndexType) {\r\n        case MeshIndexType::BYTE:\r\n            indexSize = 1;\r\n            break;\r\n        case MeshIndexType::SHORT:\r\n            indexSize = 2;\r\n            break;\r\n        case MeshIndexType::INT:\r\n            indexSize = 4;\r\n            break;\r\n    }\r\n    bytes->insert(bytes->end(), (char*)m_indices, (char*)(m_indices) + (m_numIndices * indexSize));\r\n\r\n    return bytes;\r\n}\r\n\r\nvoid h_core::render::MeshAsset::fromPacked(const void* data, size_t length) {\r\n    const char* bytes = (const char*)data;\r\n\r\n    HYLOG_DEBUG(\"MESH: loading from packed (%zu bytes)\\n\", length);\r\n    HYLOG_DEBUG(\"MESH: first byte %x\\n\", bytes[0]);\r\n\r\n    uint32_t numVertices = *(uint32_t*)(bytes + 0);\r\n    HYLOG_DEBUG(\"MESH: # of vertices: %d\\n\", numVertices);\r\n\r\n    m_vertices = new h_core::render::Vertex[numVertices];\r\n    memcpy(m_vertices, bytes + sizeof(uint32_t), numVertices * sizeof(h_core::render::Vertex));\r\n\r\n    uint32_t numIndices = *(uint32_t*)(bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex));\r\n    HYLOG_DEBUG(\"MESH: # of indices: %d\\n\", numIndices);\r\n\r\n    m_indices = new uint16_t[numIndices];  // TODO: use actual index type\r\n    memcpy(\r\n        m_indices, bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex) + sizeof(uint32_t),\r\n        numIndices * sizeof(uint16_t));\r\n\r\n    m_numVertices = numVertices;\r\n    m_numIndices = numIndices;\r\n    m_meshIndexType = MeshIndexType::SHORT;\r\n    m_primitiveMode = GL_TRIANGLES;\r\n    m_isCube = false;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc b/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc
--- a/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc	(date 1726088025960)
@@ -295,7 +295,7 @@
     uint32_t numIndices = *(uint32_t*)(bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex));
     HYLOG_DEBUG("MESH: # of indices: %d\n", numIndices);
 
-    m_indices = new uint16_t[numIndices];  // TODO: use actual index type
+    m_indices = new uint32_t [numIndices];  // TODO: use actual index type
     memcpy(
         m_indices, bytes + sizeof(uint32_t) + numVertices * sizeof(h_core::render::Vertex) + sizeof(uint32_t),
         numIndices * sizeof(uint16_t));
@@ -306,3 +306,22 @@
     m_primitiveMode = GL_TRIANGLES;
     m_isCube = false;
 }
+
+void h_core::render::MeshAsset::doGUI() {
+    ImGui::Text("Vertex Count: %d", m_numVertices);
+    ImGui::Text("Index Count: %d", m_numIndices);
+    const char* indexTypeName;
+    switch (m_meshIndexType) {
+        case MeshIndexType::BYTE:
+            indexTypeName = "BYTE";
+            break;
+        case MeshIndexType::SHORT:
+            indexTypeName = "SHORT";
+            break;
+        case MeshIndexType::INT:
+            indexTypeName = "INT";
+            break;
+    }
+    ImGui::Text("Index Type: %s", indexTypeName);
+    ImGui::Text("Primitive Mode: %s", m_primitiveMode == GL_TRIANGLES ? "TRIANGLES" : "OTHER");
+}
Index: core/include/core/assets.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#pragma once\r\n\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n#include <string>\r\n#include <thread>\r\n#include <type_traits>  // grumble grumble\r\n#include <unordered_map>\r\n\r\n#include \"SDL.h\"\r\n#include \"yaml-cpp/yaml.h\"\r\n\r\n#include \"core/actorspecasset.h\"\r\n#include \"core/assetindex.h\"\r\n#include \"core/log.h\"\r\n#include \"core/project/projectassetentry.h\"\r\n#include \"core/scenespecasset.h\"\r\n#include \"core/systems/render/meshasset.h\"\r\n#include \"core/systems/script/scriptasset.h\"\r\n\r\n#define TYPED_SWITCH_CASE(type, func, ...) \\\r\n    case type::getTypeId(): {              \\\r\n        func<type>(__VA_ARGS__);           \\\r\n        break;                             \\\r\n    }\r\n\r\n#define CALL_TYPED_FUNC_WITH_ASSET_ID(id, func, ...)                         \\\r\n    switch ((id)) {                                                          \\\r\n        TYPED_SWITCH_CASE(h_core::SceneSpecAsset, func, ##__VA_ARGS__);      \\\r\n        TYPED_SWITCH_CASE(h_core::ActorSpecAsset, func, ##__VA_ARGS__);      \\\r\n        TYPED_SWITCH_CASE(h_core::script::ScriptAsset, func, ##__VA_ARGS__); \\\r\n        TYPED_SWITCH_CASE(h_core::render::MeshAsset, func, ##__VA_ARGS__);   \\\r\n    }\r\n\r\n#define ASSERT_TYPE_IS_ASSET_TYPE(type, error_msg) static_assert(std::is_base_of_v<h_core::Asset, type>, error_msg)\r\n\r\n#define ASSETS_LOAD_FAIL_CANT_OPEN_FILE 1\r\n#define ASSETS_LOAD_FAIL_FILE_TOO_BIG   2\r\n\r\n#define ASSETS_MAX_ASSET_COUNT 128\r\n\r\nnamespace h_core {\r\ntypedef uint32_t AssetHash;\r\n\r\nnamespace project {\r\nclass Project;\r\n}\r\n\r\n// Base class for all sources of assets (packed/unpacked)\r\nclass Assets {\r\n  public:\r\n    Assets() = default;\r\n\r\n    void loadFromProject(const h_core::project::Project* project);\r\n\r\n    /// @brief convert the name of an asset to its hash\r\n    /// @param string the string to convert (asset name)\r\n    /// @return the hash\r\n    static AssetHash getAssetHashFromString(const std::string& string);\r\n\r\n    /// @brief loads or retrieves an asset index by its name.\r\n    /// @tparam AssetType the asset type to load (base class h_core::Asset)\r\n    /// @param filePath the path to load\r\n    /// @return the asset index (permanent)\r\n    template<typename AssetType>\r\n    h_core::AssetIndex getOrLoadAsset(std::string filePath);\r\n\r\n    /// @brief Get an asset by its index. Note that this pointer is only valid\r\n    /// until the assets are updated again; hold on to an AssetIndex instead.\r\n    /// @tparam AssetType the asset type to load (base class h_core::Asset)\r\n    /// @param index the index to load\r\n    /// @return a pointer (not managed by you!) to the asset\r\n    template<typename AssetType>\r\n    AssetType* getAssetByIndex(h_core::AssetIndex index) const;\r\n\r\n    uint32_t getAssetCount() const;\r\n\r\n  protected:\r\n    template<typename AssetType>\r\n    h_core::AssetIndex loadAssetFromFile(AssetType* out_asset, std::string filePath);\r\n\r\n    template<typename AssetType>\r\n    void loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile);\r\n\r\n    h_core::Asset* m_assets[ASSETS_MAX_ASSET_COUNT] = {};\r\n    std::unordered_map<h_core::AssetHash, h_core::AssetIndex> m_assetIndexMap {};  // hash -> asset index\r\n    h_core::AssetIndex m_nextAssetIndex = 0;\r\n    uint32_t m_assetCount = 0;\r\n};\r\n}  // namespace h_core\r\n\r\ntemplate<typename AssetType>\r\nuint32_t h_core::Assets::loadAssetFromFile(AssetType* out_asset, std::string filePath) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't load asset type that does not derive from Asset\");\r\n\r\n    // Load file\r\n    const char* fileText = (const char*)SDL_LoadFile(filePath.c_str(), nullptr);\r\n\r\n    // Parse YAML and load asset\r\n    YAML::Node yaml = YAML::Load(fileText);\r\n    out_asset->initFromYaml(this, yaml);\r\n\r\n    m_assetCount++;\r\n\r\n    return 0;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nh_core::AssetIndex h_core::Assets::getOrLoadAsset(std::string filePath) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't load asset type that does not derive from Asset\");\r\n\r\n    // TODO: This hashing piece to the loading can probably be removed\r\n    h_core::AssetHash hash = getAssetHashFromString(filePath);\r\n    if (m_assetIndexMap.count(hash) > 0) {\r\n        // Load existing asset\r\n        h_core::AssetIndex assetIndex = m_assetIndexMap[hash];\r\n        return assetIndex;\r\n    }\r\n    else {\r\n        // Load new asset\r\n        h_core::AssetIndex assetIndex = m_nextAssetIndex++;\r\n        AssetType* asset = new AssetType();\r\n        uint32_t result = loadAssetFromFile<AssetType>(asset, filePath);\r\n        if (result != 0) {\r\n            HYLOG_ERROR(\"ASSETS: Failed to load asset %s\\n\", filePath.c_str());\r\n            return ASSET_INDEX_BAD;\r\n        }\r\n        else {\r\n            m_assets[assetIndex] = asset;\r\n            m_assetIndexMap[hash] = assetIndex;\r\n            return assetIndex;\r\n        }\r\n    }\r\n\r\n    return ASSET_INDEX_BAD;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nAssetType* h_core::Assets::getAssetByIndex(h_core::AssetIndex index) const {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    if (index == ASSET_INDEX_BAD) return nullptr;\r\n\r\n    return static_cast<AssetType*>(m_assets[index]);\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::Assets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    // Load from file\r\n    AssetType* asset = new AssetType();\r\n    loadAssetFromFile<AssetType>(asset, assetFile);\r\n    m_assets[assetIndex] = asset;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/include/core/assets.h b/core/include/core/assets.h
--- a/core/include/core/assets.h	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/core/include/core/assets.h	(date 1726083665960)
@@ -148,6 +148,8 @@
 void h_core::Assets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile) {
     ASSERT_TYPE_IS_ASSET_TYPE(AssetType, "Can't get asset type that does not derive from Asset");
 
+    HYLOG_INFO("ASSETS: Loading asset index %d...", assetIndex);
+
     // Load from file
     AssetType* asset = new AssetType();
     loadAssetFromFile<AssetType>(asset, assetFile);
Index: runtime/assets/test_actor.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>mask: 7\r\ntransform:\r\n  position:\r\n    x: 0\r\n    y: 5\r\n    z: 0\r\n  rotation:\r\n    x: 0\r\n    y: 0\r\n    z: 0\r\n    w: 1\r\n  scale:\r\n    x: 1\r\n    y: 1\r\n    z: 1\r\nmodel:\r\n  index: 40\r\nscript:\r\n  index: 2
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runtime/assets/test_actor.yml b/runtime/assets/test_actor.yml
--- a/runtime/assets/test_actor.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/runtime/assets/test_actor.yml	(date 1726083528475)
@@ -14,6 +14,6 @@
     y: 1
     z: 1
 model:
-  index: 40
+  index: 41
 script:
   index: 2
\ No newline at end of file
Index: android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by angus.goucher on 9/8/2024.\r\n//\r\n\r\n#include \"core/runtimeassets.h\"\r\n\r\n#include \"imgui.h\"\r\n\r\n#include \"core/log.h\"\r\n#include \"core/project/project.h\"\r\n#include \"core/theming/guicolors.h\"\r\n\r\nvoid h_core::RuntimeAssets::init(const std::string& serverAddress) {\r\n    curl_global_init(CURL_GLOBAL_ALL);\r\n\r\n    m_serverAddress = serverAddress;\r\n\r\n    m_netRequestThreadContext.pingServerAddress = serverAddress;\r\n    m_netRequestThreadContext.netRequestThreadAlive = false;\r\n    m_netRequestThread = std::thread { netRequestThreadFunction, &m_netRequestThreadContext };\r\n}\r\n\r\nuint32_t h_core::RuntimeAssets::command_loadAsset(const std::string& arguments, void* data) {\r\n    h_core::RuntimeAssets* assets = (h_core::RuntimeAssets*)data;\r\n    RUNTIMECONSOLE_PARSE_ARGS(arguments, yaml);\r\n\r\n    uint32_t assetType = yaml[\"type\"].as<uint32_t>(UINT32_MAX);\r\n    uint32_t assetIndex = yaml[\"index\"].as<uint32_t>(ASSET_INDEX_BAD);\r\n    std::string assetPath = yaml[\"path\"].as<std::string>(\"\");\r\n    bool isRemote = yaml[\"remote\"].as<bool>(false);\r\n\r\n    if (assetType == UINT32_MAX) { return 2; }\r\n    if (assetIndex == ASSET_INDEX_BAD) { return 3; }\r\n    if (assetPath.empty() && !isRemote) { return 4; }\r\n\r\n    CALL_TYPED_FUNC_WITH_ASSET_ID(assetType, assets->loadAsset, assetIndex, assetPath, isRemote);\r\n\r\n    return 0;\r\n}\r\n\r\nvoid h_core::RuntimeAssets::registerCommands(h_core::RuntimeConsole* console) {\r\n    console->newCommandWithHelp(\r\n        \"loadAsset\", h_core::RuntimeAssets::command_loadAsset, this,\r\n        \"{ type: int, index: int, path: string, remote: bool } load an asset of type 'type' into index 'index' from either path 'path' or from the server if 'remote'\");\r\n}\r\n\r\nvoid h_core::RuntimeAssets::destroy() {\r\n    m_netRequestThreadContext.netRequestThreadAlive = true;\r\n    m_netRequestThread.join();\r\n}\r\n\r\nvoid h_core::RuntimeAssets::doGUI() {\r\n    if (ImGui::Begin(\"Runtime Assets Debugger\")) {\r\n        ImGui::PushStyleColor(ImGuiCol_ChildBg, hasServerConnection() ? IMGUI_COLOR_GOOD : IMGUI_COLOR_WARN);\r\n        ImGui::PushStyleColor(ImGuiCol_Text, ImVec4 { 0, 0, 0, 0.5 });\r\n        constexpr float statusAreaHeight = 50;\r\n        ImGui::BeginChild(\"Server Status\", ImVec2 { 0, statusAreaHeight });\r\n        {\r\n            const char* text = hasServerConnection() ? \"CONNECTED TO SERVER\" : \"NOT CONNECTED TO SERVER\";\r\n            ImVec2 textSize = ImGui::CalcTextSize(text);\r\n            float windowW = ImGui::GetWindowWidth();\r\n            float windowH = ImGui::GetWindowHeight();\r\n            ImGui::SetCursorPosX(windowW / 2.f - textSize.x / 2.f);\r\n            ImGui::SetCursorPosY(windowH / 2.f - textSize.y / 2.f);\r\n            ImGui::Text(text);\r\n        }\r\n        ImGui::EndChild();\r\n        ImGui::PopStyleColor();\r\n        ImGui::PopStyleColor();\r\n\r\n        ImGui::Separator();\r\n\r\n        if (ImGui::CollapsingHeader(\"Recent Net Request Jobs\")) {\r\n            ImGui::Indent();\r\n            uint32_t jobIndex = 0;\r\n            for (NetRequestJob job : m_recentJobs) {\r\n                ImGui::PushID(jobIndex);\r\n                std::string headerText =\r\n                    \"Request #\" + std::to_string(jobIndex) + \" (Asset #\" + std::to_string(job.assetIndex) + \")\";\r\n                if (ImGui::CollapsingHeader(headerText.c_str())) {\r\n                    ImGui::Text(\"Asset Index: %d\", job.assetIndex);\r\n                    ImGui::Text(\"Asset Type: %d\", job.assetType);\r\n                    ImGui::Text(\"Server Address: %s\", job.serverAddress.c_str());\r\n                }\r\n                ImGui::PopID();\r\n                jobIndex++;\r\n            }\r\n            ImGui::Unindent();\r\n        }\r\n    }\r\n    ImGui::End();\r\n}\r\n\r\nvoid h_core::RuntimeAssets::loadFromProject(const h_core::project::Project* project) {\r\n    for (const h_core::project::ProjectAssetEntry& assetInfo : project->requiredAssets) {\r\n        CALL_TYPED_FUNC_WITH_ASSET_ID(\r\n            assetInfo.typeId, RuntimeAssets::loadAsset, assetInfo.index, assetInfo.assetPath, assetInfo.isRemote);\r\n    }\r\n}\r\n\r\nvoid h_core::RuntimeAssets::precompile(h_core::RuntimeSystems* systems) {\r\n    for (int assetIndex = 0; assetIndex < ASSETS_MAX_ASSET_COUNT; ++assetIndex) {\r\n        h_core::Asset* asset = m_assets[assetIndex];\r\n        if (asset != nullptr) { asset->precompile(systems); }\r\n    }\r\n}\r\n\r\nvoid h_core::RuntimeAssets::flushAndPrecompileNetAssets(h_core::RuntimeSystems* systems) {\r\n    m_netRequestThreadContext.resultQueueLock.lock();\r\n\r\n    while (!m_netRequestThreadContext.results.empty()) {\r\n        h_core::NetRequestResult result = m_netRequestThreadContext.results.front();\r\n\r\n        if (result.success) {\r\n            // Replace old asset\r\n            if (m_assets[result.job.assetIndex] != nullptr) { delete m_assets[result.job.assetIndex]; }\r\n            m_assets[result.job.assetIndex] = result.newAsset;\r\n            result.newAsset->precompile(systems);\r\n        }\r\n        else {\r\n            // Re-queue new asset request\r\n            CALL_TYPED_FUNC_WITH_ASSET_ID(result.job.assetType, RuntimeAssets::requestNetAsset, result.job.assetIndex);\r\n        }\r\n\r\n        m_netRequestThreadContext.results.pop_front();\r\n    }\r\n\r\n    m_netRequestThreadContext.resultQueueLock.unlock();\r\n}\r\n\r\nvoid h_core::RuntimeAssets::netRequestThreadFunction(h_core::NetRequestThreadContext* context) {\r\n    HYLOG_INFO(\"ASSETS: Net request thread running!\\n\");\r\n\r\n    while (!context->netRequestThreadAlive) {\r\n        // Do jobs if needed\r\n        if (!context->jobs.empty()) {\r\n            // Request asset\r\n            NetRequestJob job = context->jobs.front();\r\n            HYLOG_INFO(\"ASSETS: THREAD: got job request for asset %d\\n\", job.assetIndex);\r\n            h_core::Asset* newAsset = nullptr;\r\n            CURLcode result;\r\n            CALL_TYPED_FUNC_WITH_ASSET_ID(\r\n                job.assetType, h_core::RuntimeAssets::requestNetAssetNow, &newAsset, &result, job.serverAddress,\r\n                job.assetIndex);\r\n            HYLOG_INFO(\"ASSETS: THREAD: completed net request for asset %d\\n\", job.assetIndex);\r\n\r\n            // Apply to asset list\r\n            HYLOG_INFO(\"ASSETS: THREAD: awaiting asset list access... \\n\", job.assetIndex);\r\n            context->resultQueueLock.lock();\r\n            {\r\n                // Add result to the return list\r\n                if (newAsset == nullptr) { context->results.emplace_back(nullptr, job, false); }\r\n                else { context->results.emplace_back(newAsset, job, true); }\r\n            }\r\n            context->resultQueueLock.unlock();\r\n            HYLOG_INFO(\"ASSETS: THREAD: updated asset list \\n\", job.assetIndex);\r\n\r\n            // remove job\r\n            context->jobs.pop_front();\r\n        }\r\n\r\n        // Update connection test\r\n        CURL* connectTest = curl_easy_init();\r\n        curl_easy_setopt(connectTest, CURLOPT_URL, context->pingServerAddress.c_str());\r\n        curl_easy_setopt(connectTest, CURLOPT_CONNECT_ONLY, 1L);\r\n        CURLcode result = curl_easy_perform(connectTest);\r\n        if (result != CURLE_OK && result != CURLE_COULDNT_CONNECT) {\r\n            HYLOG_WARN(\"ASSETS: Ping attempt returned curl error code %d\\n\", result);\r\n        }\r\n        context->hasServerConnection = result == CURLE_OK;\r\n    }\r\n\r\n    HYLOG_INFO(\"ASSETS: Killing net request thread...\\n\");\r\n}\r\n\r\nbool h_core::RuntimeAssets::hasServerConnection() {\r\n    return m_netRequestThreadContext.hasServerConnection;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc b/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc
--- a/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc	(date 1726086812437)
@@ -87,6 +87,21 @@
             }
             ImGui::Unindent();
         }
+
+        if (ImGui::CollapsingHeader("Asset List")) {
+            ImGui::Indent();
+            uint32_t assetIndex = 0;
+            for (h_core::Asset* asset : m_assets) {
+                if (asset != nullptr) {
+                    std::string header = "Asset " + std::to_string(assetIndex);
+                    if (ImGui::CollapsingHeader(header.c_str())) {
+                        asset->doGUI();
+                    }
+                }
+                assetIndex++;
+            }
+            ImGui::Unindent();
+        }
     }
     ImGui::End();
 }
Index: android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by angus.goucher on 9/8/2024.\r\n//\r\n\r\n#pragma once\r\n\r\n#include \"SDL.h\"\r\n\r\n#include \"curl/curl.h\"\r\n\r\n#include \"core/assets.h\"\r\n#include \"core/netrequestthreadcontext.h\"\r\n#include \"core/runtimeconsole.h\"\r\n\r\n#define RUNTIMEASSETS_MAX_RECENT_JOBS 10\r\n\r\nnamespace h_core {\r\nclass RuntimeAssets : public Assets {\r\n  public:\r\n    RuntimeAssets() = default;\r\n\r\n    void init(const std::string& serverAddress);\r\n    void registerCommands(h_core::RuntimeConsole* console);\r\n    void destroy();\r\n    void doGUI();\r\n\r\n    void loadFromProject(const h_core::project::Project* project);\r\n    void precompile(h_core::RuntimeSystems* systems);\r\n    void flushAndPrecompileNetAssets(h_core::RuntimeSystems* systems);\r\n\r\n    template<typename AssetType>\r\n    void requestNetAsset(h_core::AssetIndex index);\r\n\r\n    static void netRequestThreadFunction(h_core::NetRequestThreadContext* context);\r\n\r\n    bool hasServerConnection();\r\n\r\n    template<typename AssetType>\r\n    void loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile, bool isRemote);\r\n\r\n  private:\r\n    template<typename AssetType>\r\n    static void requestNetAssetNow(\r\n        h_core::Asset** out_assetPtr, CURLcode* out_error, const std::string& serverAddress, h_core::AssetIndex index);\r\n\r\n    static uint32_t command_loadAsset(const std::string& arguments, void* data);\r\n\r\n    std::string m_serverAddress {};\r\n    std::thread m_netRequestThread {};\r\n    std::deque<h_core::NetRequestJob> m_recentJobs {};\r\n    h_core::NetRequestThreadContext m_netRequestThreadContext {};\r\n};\r\n}  // namespace h_core\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::RuntimeAssets::requestNetAsset(h_core::AssetIndex index) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't request non-asset type.\");\r\n\r\n    NetRequestJob job { m_serverAddress, index, AssetType::getTypeId() };\r\n\r\n    m_netRequestThreadContext.jobQueueLock.lock();\r\n    { m_netRequestThreadContext.jobs.push_back(job); }\r\n    m_netRequestThreadContext.jobQueueLock.unlock();\r\n\r\n    m_recentJobs.push_back(job);\r\n    if (m_recentJobs.size() > RUNTIMEASSETS_MAX_RECENT_JOBS) m_recentJobs.pop_front();\r\n}\r\n\r\ntemplate<typename AssetType>\r\nsize_t netAssetWrite(void* buffer, size_t pieceSize, size_t pieceCount, void* out_asset) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't netload asset type that does not inherit from Asset\");\r\n\r\n    AssetType* asset = new AssetType();\r\n    size_t byteCount = pieceSize * pieceCount;\r\n    asset->fromPacked(buffer, byteCount);\r\n    *(AssetType**)out_asset = asset;\r\n\r\n    HYLOG_DEBUG(\"ASSETS: Net asset write %d bytes\\n\", byteCount);\r\n\r\n    return byteCount;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::RuntimeAssets::requestNetAssetNow(\r\n    h_core::Asset** out_assetPtr, CURLcode* out_error, const std::string& serverAddress, h_core::AssetIndex index) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't request non-asset type.\");\r\n\r\n    CURL* netHandle = curl_easy_init();\r\n    std::string url = serverAddress + std::string(\"asset/\") + std::to_string(index);\r\n    HYLOG_INFO(\"ASSETS: Requesting %s...\\n\", url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_URL, (void*)url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEFUNCTION, &netAssetWrite<AssetType>);\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEDATA, out_assetPtr);\r\n    curl_easy_setopt(netHandle, CURLOPT_CONNECTTIMEOUT, 0.5);\r\n    CURLcode result = curl_easy_perform(netHandle);\r\n    if (result != CURLE_OK) { HYLOG_WARN(\"ASSETS: Curl (asset %d) (error code %d): %s\\n\", index, result, curl_easy_strerror(result)); }\r\n    else { HYLOG_INFO(\"ASSETS: Curled asset %d OK\\n\", index); }\r\n    if (out_error != nullptr) *out_error = result;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::RuntimeAssets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile, bool isRemote) {\r\n    ASSERT_TYPE_IS_ASSET_TYPE(AssetType, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    if (isRemote) {\r\n        // Load from server\r\n        requestNetAsset<AssetType>(assetIndex);\r\n    }\r\n    else {\r\n        // Load from file\r\n        AssetType* asset = new AssetType();\r\n        loadAssetFromFile<AssetType>(asset, assetFile);\r\n        m_assets[assetIndex] = asset;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h b/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h
--- a/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h	(date 1726083695654)
@@ -102,6 +102,8 @@
 void h_core::RuntimeAssets::loadAsset(h_core::AssetIndex assetIndex, const std::string& assetFile, bool isRemote) {
     ASSERT_TYPE_IS_ASSET_TYPE(AssetType, "Can't get asset type that does not derive from Asset");
 
+    HYLOG_INFO("RUNTIME ASSETS: Loading asset index %d...", assetIndex);
+
     if (isRemote) {
         // Load from server
         requestNetAsset<AssetType>(assetIndex);
Index: server/assets/project.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>initial_scene_spec: 7\r\nname: \"Hello World\"\r\ninput_actions:\r\n  - name: fire\r\n    sources:\r\n      - key: 4\r\n  - name: move_x\r\n    sources:\r\n      - positive_key: 79\r\n        negative_key: 80\r\nassets:\r\n  - index: 1\r\n    type: 1\r\n    path: \"assets/test_actor2.yml\"\r\n  - index: 2\r\n    type: 2\r\n    path: \"assets/test_script.yml\"\r\n#  - index: 3\r\n#    type: 3\r\n#    path: \"assets/test_model.yml\"\r\n  - index: 40\r\n    type: 3\r\n    path: \"assets/test_model2.yml\"\r\n  - index: 7\r\n    type: 0\r\n    path: \"assets/test_scene.yml\"\r\n  - index: 10\r\n    type: 1\r\n    path: \"assets/test_actor.yml\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/assets/project.yml b/server/assets/project.yml
--- a/server/assets/project.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/server/assets/project.yml	(date 1726087274122)
@@ -18,9 +18,12 @@
 #  - index: 3
 #    type: 3
 #    path: "assets/test_model.yml"
-  - index: 40
+#  - index: 40
+#    type: 3
+#    path: "assets/test_model2.yml"
+  - index: 41
     type: 3
-    path: "assets/test_model2.yml"
+    path: "assets/test_terrain1.yml"
   - index: 7
     type: 0
     path: "assets/test_scene.yml"
Index: core/include/core/asset.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#pragma once\r\n\r\n#include \"yaml-cpp/yaml.h\"\r\n\r\n#define HYASSET(typeId) constexpr static uint32_t getTypeId() { return typeId; }\r\n\r\nnamespace h_core {\r\nclass Assets;\r\nclass RuntimeSystems;\r\n\r\nclass Asset {\r\n  public:\r\n    Asset() = default;\r\n    Asset(const h_core::Asset& asset) = delete;\r\n    Asset& operator=(const h_core::Asset& asset) = delete;\r\n\r\n    virtual uint32_t initFromYaml(h_core::Assets* assets, YAML::Node node);\r\n    virtual uint32_t precompile(h_core::RuntimeSystems* systems);\r\n    virtual std::vector<char>* toPacked();\r\n    virtual void fromPacked(const void* packedData, size_t length);\r\n\r\n    bool isRemote = false;\r\n\r\n    HYASSET(UINT32_MAX);\r\n};\r\n}  // namespace h_core
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/include/core/asset.h b/core/include/core/asset.h
--- a/core/include/core/asset.h	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/core/include/core/asset.h	(date 1726086397578)
@@ -18,6 +18,7 @@
     virtual uint32_t precompile(h_core::RuntimeSystems* systems);
     virtual std::vector<char>* toPacked();
     virtual void fromPacked(const void* packedData, size_t length);
+    virtual void doGUI();
 
     bool isRemote = false;
 
Index: server/assets/test_model2.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>gltf: assets/butter/Butter.glb\r\ngltf_binary: true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/assets/test_model2.yml b/server/assets/test_model2.yml
--- a/server/assets/test_model2.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/server/assets/test_model2.yml	(date 1726087258169)
@@ -1,2 +1,2 @@
-gltf: assets/butter/Butter.glb
+gltf: assets/terrain/canyon1.glb
 gltf_binary: true
\ No newline at end of file
Index: server/assets/test_terrain1.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/assets/test_terrain1.yml b/server/assets/test_terrain1.yml
new file mode 100644
--- /dev/null	(date 1726083459607)
+++ b/server/assets/test_terrain1.yml	(date 1726083459607)
@@ -0,0 +1,2 @@
+gltf: assets/terrain/canyon1.glb
+gltf_binary: true
\ No newline at end of file
Index: android/hydrogen/app/jni.bak/hydrogen/server/assets/test_terrain1.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/server/assets/test_terrain1.yml b/android/hydrogen/app/jni.bak/hydrogen/server/assets/test_terrain1.yml
new file mode 100644
--- /dev/null	(date 1726083459607)
+++ b/android/hydrogen/app/jni.bak/hydrogen/server/assets/test_terrain1.yml	(date 1726083459607)
@@ -0,0 +1,2 @@
+gltf: assets/terrain/canyon1.glb
+gltf_binary: true
\ No newline at end of file
Index: android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>initial_scene_spec: 7\r\nname: \"Hello World\"\r\ninput_actions:\r\n  - name: fire\r\n    sources:\r\n      - key: 4\r\n  - name: move_x\r\n    sources:\r\n      - positive_key: 79\r\n        negative_key: 80\r\nassets:\r\n  - index: 1\r\n    type: 1\r\n    path: \"assets/test_actor2.yml\"\r\n  - index: 2\r\n    type: 2\r\n    path: \"assets/test_script.yml\"\r\n#  - index: 3\r\n#    type: 3\r\n#    path: \"assets/test_model.yml\"\r\n  - index: 40\r\n    type: 3\r\n    path: \"assets/test_model2.yml\"\r\n  - index: 7\r\n    type: 0\r\n    path: \"assets/test_scene.yml\"\r\n  - index: 10\r\n    type: 1\r\n    path: \"assets/test_actor.yml\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml b/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml
--- a/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml	(date 1726087274122)
@@ -18,9 +18,12 @@
 #  - index: 3
 #    type: 3
 #    path: "assets/test_model.yml"
-  - index: 40
+#  - index: 40
+#    type: 3
+#    path: "assets/test_model2.yml"
+  - index: 41
     type: 3
-    path: "assets/test_model2.yml"
+    path: "assets/test_terrain1.yml"
   - index: 7
     type: 0
     path: "assets/test_scene.yml"
Index: android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>mask: 7\r\ntransform:\r\n  position:\r\n    x: 0\r\n    y: 5\r\n    z: 0\r\n  rotation:\r\n    x: 0\r\n    y: 0\r\n    z: 0\r\n    w: 1\r\n  scale:\r\n    x: 1\r\n    y: 1\r\n    z: 1\r\nmodel:\r\n  index: 40\r\nscript:\r\n  index: 2
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml b/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml
--- a/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml	(date 1726083528475)
@@ -14,6 +14,6 @@
     y: 1
     z: 1
 model:
-  index: 40
+  index: 41
 script:
   index: 2
\ No newline at end of file
Index: android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>initial_scene_spec: 7\r\nname: \"Hello World\"\r\ninput_actions:\r\n  - name: fire\r\n    sources:\r\n      - key: 4\r\n  - name: move_x\r\n    sources:\r\n      - positive_key: 79\r\n        negative_key: 80\r\nassets:\r\n  - index: 1\r\n    type: 1\r\n    path: \"assets/test_actor2.yml\"\r\n  - index: 2\r\n    type: 2\r\n    path: \"assets/test_script.yml\"\r\n#  - index: 3\r\n#    type: 3\r\n#    path: \"assets/test_model.yml\"\r\n  - index: 40\r\n    type: 3\r\n#    path: \"assets/test_model2.yml\"\r\n    remote: true\r\n  - index: 7\r\n    type: 0\r\n    path: \"assets/test_scene.yml\"\r\n  - index: 10\r\n    type: 1\r\n    path: \"assets/test_actor.yml\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml b/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml
--- a/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml	(date 1726087277122)
@@ -15,13 +15,13 @@
   - index: 2
     type: 2
     path: "assets/test_script.yml"
-#  - index: 3
+#  - index: 40
 #    type: 3
-#    path: "assets/test_model.yml"
-  - index: 40
+#    remote: true
+  - index: 41
     type: 3
-#    path: "assets/test_model2.yml"
     remote: true
+#    path: "assets/test_model2.yml"
   - index: 7
     type: 0
     path: "assets/test_scene.yml"
Index: runtime/assets/project.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>initial_scene_spec: 7\r\nname: \"Hello World\"\r\ninput_actions:\r\n  - name: fire\r\n    sources:\r\n      - key: 4\r\n  - name: move_x\r\n    sources:\r\n      - positive_key: 79\r\n        negative_key: 80\r\nassets:\r\n  - index: 1\r\n    type: 1\r\n    path: \"assets/test_actor2.yml\"\r\n  - index: 2\r\n    type: 2\r\n    path: \"assets/test_script.yml\"\r\n#  - index: 3\r\n#    type: 3\r\n#    path: \"assets/test_model.yml\"\r\n  - index: 40\r\n    type: 3\r\n#    path: \"assets/test_model2.yml\"\r\n    remote: true\r\n  - index: 7\r\n    type: 0\r\n    path: \"assets/test_scene.yml\"\r\n  - index: 10\r\n    type: 1\r\n    path: \"assets/test_actor.yml\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runtime/assets/project.yml b/runtime/assets/project.yml
--- a/runtime/assets/project.yml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/runtime/assets/project.yml	(date 1726087277122)
@@ -15,13 +15,13 @@
   - index: 2
     type: 2
     path: "assets/test_script.yml"
-#  - index: 3
+#  - index: 40
 #    type: 3
-#    path: "assets/test_model.yml"
-  - index: 40
+#    remote: true
+  - index: 41
     type: 3
-#    path: "assets/test_model2.yml"
     remote: true
+#    path: "assets/test_model2.yml"
   - index: 7
     type: 0
     path: "assets/test_scene.yml"
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"CMakePresetLoader\">{\r\n  &quot;useNewFormat&quot;: true\r\n}</component>\r\n  <component name=\"CMakeProjectFlavorService\">\r\n    <option name=\"flavorId\" value=\"CMakePlainProjectFlavor\" />\r\n  </component>\r\n  <component name=\"CMakeReloadState\">\r\n    <option name=\"reloaded\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\">\r\n    <generated>\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_CopyShaders\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"angelscript\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_Shared\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2main\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Experimental\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"libcurl_object\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Nightly\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalSubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2-static\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"imgui.cmake\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_AngelScriptExtensions\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"sdl_headers_copy\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousSubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenServer_Wrapper\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"uninstall\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"libcurl_static\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenRuntime_Assets\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyMemoryCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2_test\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlySubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"yaml-cpp\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousUpdate\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenRuntime\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"tinygltf\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyUpdate\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"glad\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenServer\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Continuous\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalUpdate\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug-Visual Studio\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" TOOLCHAIN_NAME=\"Visual Studio\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b7057f5c-305f-4c98-9fc0-3c11825fbbe1\" name=\"Changes\" comment=\"added libcurl\">\r\n      <change afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/log.h\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/core/include/core/log.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/assets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/assets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/runtimeassets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/runtimeassets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/runtimeconsole.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/runtimeconsole.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/actorspecasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/actorspecasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/asset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/asset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/assets.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/assets.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/engine.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/engine.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/project/project.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/project/project.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/runtimeassets.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/runtimeassets.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/runtimeconsole.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/runtimeconsole.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/runtimeengine.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/runtimeengine.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/scene.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/scene.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/render/meshasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/render/meshasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/render/renderer.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/render/renderer.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/script/scriptasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/script/scriptasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/script/scripting.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/script/scripting.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/window.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/window.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/server/wrap/wrap.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/server/wrap/wrap.cc\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug-Visual Studio\" />\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"HTML File\" />\r\n        <option value=\"CMakeLists.txt\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;gusg21&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/gusg21/hydrogen.git&quot;,\r\n    &quot;accountId&quot;: &quot;5b442d73-9f27-4fc6-a9b8-1cf6ee7986c9&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock:///dummy.cpp\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/assets.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/engine.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/input/input.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/netrequestthreadcontext.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/runtimeassets.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/runtimeengine.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/core/include/core/systems/render/gles3renderer.h\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/editor/include/editor/editorengine.h\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"NamedScopeManager\">\r\n    <scope name=\"Core Source\" pattern=\"file:core/src//*\" />\r\n    <scope name=\"Core Headers\" pattern=\"file:core/include//*\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2024\" />\r\n    <option name=\"minorVersion\" value=\"2.1\" />\r\n    <option name=\"productBranch\" value=\"Classic\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lRXeQrlEOuhFzwP84z4XzhILwF\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,\r\n    &quot;CMake Application.HydrogenEditor.executor&quot;: &quot;Debug&quot;,\r\n    &quot;CMake Application.HydrogenRuntime.executor&quot;: &quot;Run&quot;,\r\n    &quot;CMake Debug.Hydrogen.executor&quot;: &quot;Debug&quot;,\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.RadMigrateCodeStyle&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;cf.advertisement.text.overridden&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Projects/hydrogen/server/templates&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,\r\n    &quot;two.files.diff.last.used.file&quot;: &quot;C:/Projects/hydrogen/server/templates/status.html&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Projects\\hydrogen\\server\\templates\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\server\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\shaders\\es\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\runtime\\assets\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\include\\core\" />\r\n      <recent name=\"C:\\Users\\angus.goucher\\CLionProjects\\hydrogen\\editor\\include\\editor\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\shaders\\core\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\src\\project\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\include\\core\\project\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"CMake Application.HydrogenRuntime\">\r\n    <configuration default=\"true\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Continuous\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Continuous\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousBuild\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousConfigure\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousCoverage\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousMemCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousStart\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousSubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousSubmit\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousTest\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousUpdate\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Experimental\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Experimental\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalBuild\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalConfigure\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalCoverage\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalMemCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalStart\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalSubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalSubmit\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalTest\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalUpdate\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_AngelScriptExtensions\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_AngelScriptExtensions\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_CopyShaders\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_CopyShaders\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_Shared\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_Shared\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenRuntime\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenRuntime\" CONFIG_NAME=\"Debug-Visual Studio\" RUN_TARGET_PROJECT_NAME=\"Hydrogen\" RUN_TARGET_NAME=\"HydrogenRuntime\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenRuntime_Assets\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenRuntime_Assets\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenServer\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenServer\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenServer_Wrapper\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenServer_Wrapper\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Nightly\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Nightly\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyBuild\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyConfigure\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyCoverage\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyMemCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyMemoryCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyMemoryCheck\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyStart\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlySubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlySubmit\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyTest\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyUpdate\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2-static\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2-static\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2_test\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2_test\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2main\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2main\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"angelscript\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"angelscript\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"glad\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"glad\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"imgui.cmake\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"imgui.cmake\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"libcurl_object\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"libcurl_object\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"libcurl_static\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"libcurl_static\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"sdl_headers_copy\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"sdl_headers_copy\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"tinygltf\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"tinygltf\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"uninstall\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"uninstall\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"yaml-cpp\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"yaml-cpp\" CONFIG_NAME=\"Debug-Visual Studio\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"hydrogen\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/server\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/server/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"CMake Application.ContinuousBuild\" />\r\n      <item itemvalue=\"CMake Application.ContinuousConfigure\" />\r\n      <item itemvalue=\"CMake Application.ContinuousCoverage\" />\r\n      <item itemvalue=\"CMake Application.ContinuousMemCheck\" />\r\n      <item itemvalue=\"CMake Application.ContinuousStart\" />\r\n      <item itemvalue=\"CMake Application.ContinuousSubmit\" />\r\n      <item itemvalue=\"CMake Application.ContinuousTest\" />\r\n      <item itemvalue=\"CMake Application.ContinuousUpdate\" />\r\n      <item itemvalue=\"CMake Application.Continuous\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalBuild\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalConfigure\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalCoverage\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalMemCheck\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalStart\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalSubmit\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalTest\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalUpdate\" />\r\n      <item itemvalue=\"CMake Application.Experimental\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_AngelScriptExtensions\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_CopyShaders\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_Shared\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore\" />\r\n      <item itemvalue=\"CMake Application.HydrogenRuntime_Assets\" />\r\n      <item itemvalue=\"CMake Application.HydrogenRuntime\" />\r\n      <item itemvalue=\"CMake Application.HydrogenServer_Wrapper\" />\r\n      <item itemvalue=\"CMake Application.HydrogenServer\" />\r\n      <item itemvalue=\"CMake Application.NightlyBuild\" />\r\n      <item itemvalue=\"CMake Application.NightlyConfigure\" />\r\n      <item itemvalue=\"CMake Application.NightlyCoverage\" />\r\n      <item itemvalue=\"CMake Application.NightlyMemCheck\" />\r\n      <item itemvalue=\"CMake Application.NightlyMemoryCheck\" />\r\n      <item itemvalue=\"CMake Application.NightlyStart\" />\r\n      <item itemvalue=\"CMake Application.NightlySubmit\" />\r\n      <item itemvalue=\"CMake Application.NightlyTest\" />\r\n      <item itemvalue=\"CMake Application.NightlyUpdate\" />\r\n      <item itemvalue=\"CMake Application.Nightly\" />\r\n      <item itemvalue=\"CMake Application.SDL2-static\" />\r\n      <item itemvalue=\"CMake Application.SDL2_test\" />\r\n      <item itemvalue=\"CMake Application.SDL2main\" />\r\n      <item itemvalue=\"CMake Application.angelscript\" />\r\n      <item itemvalue=\"CMake Application.glad\" />\r\n      <item itemvalue=\"CMake Application.imgui.cmake\" />\r\n      <item itemvalue=\"CMake Application.SDL2\" />\r\n      <item itemvalue=\"CMake Application.libcurl_object\" />\r\n      <item itemvalue=\"CMake Application.libcurl_static\" />\r\n      <item itemvalue=\"CMake Application.sdl_headers_copy\" />\r\n      <item itemvalue=\"CMake Application.tinygltf\" />\r\n      <item itemvalue=\"CMake Application.uninstall\" />\r\n      <item itemvalue=\"CMake Application.yaml-cpp\" />\r\n      <item itemvalue=\"Python.main\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b7057f5c-305f-4c98-9fc0-3c11825fbbe1\" name=\"Changes\" comment=\"\" />\r\n      <created>1725137426654</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725137426654</updated>\r\n      <workItem from=\"1725137427672\" duration=\"5528000\" />\r\n      <workItem from=\"1725143960544\" duration=\"9000\" />\r\n      <workItem from=\"1725154721087\" duration=\"3325000\" />\r\n      <workItem from=\"1725161738514\" duration=\"10113000\" />\r\n      <workItem from=\"1725175022297\" duration=\"11047000\" />\r\n      <workItem from=\"1725219536312\" duration=\"102000\" />\r\n      <workItem from=\"1725219651630\" duration=\"40084000\" />\r\n      <workItem from=\"1725396846618\" duration=\"5597000\" />\r\n      <workItem from=\"1725421405150\" duration=\"23873000\" />\r\n      <workItem from=\"1725585006797\" duration=\"1178000\" />\r\n      <workItem from=\"1725591940685\" duration=\"53051000\" />\r\n      <workItem from=\"1725946168594\" duration=\"2007000\" />\r\n      <workItem from=\"1725948695615\" duration=\"4497000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"misc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725138416967</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725138416967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fixed asset loading systems\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725143443249</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725143443249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"working on autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725217404893</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725217404893</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fixed --target parameter\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725217555541</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725217555541</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"added artifacts to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725218626036</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725218626036</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"made autobuild artifacts more precise\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725219240701</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725219240701</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"renamed autobuild setup to &quot;Autobuild&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220158923</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220158923</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"[nobuild] allowed non rebuilding\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220496725</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220496725</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"added macOS autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220658225</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220658225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"removed accidental bad platform pairs from  autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220729307</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220729307</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"removed more accidental bad platform pairs from  autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220763996</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220763996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"use same compiler for c and c++ in autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725235112329</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725235112329</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"[nobuild] bye bye macos autobuild support\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725235332563</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725235332563</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"added input system\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725319509179</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725319509179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"added flycam + mouse grabbing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725340002967</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725340002967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"uncapped the framerate\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725342973119</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725342973119</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"larger average FPS sampling time\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343125586</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343125586</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"renamed action file to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343347163</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343347163</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"renamed action file to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343610704</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343610704</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"packed representation of models working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725600399804</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725600399804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"server is serving packed assets\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725605977985</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725605977985</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"don't try to return bad assets\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725642667514</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725642667514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"added libcurl\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725643956868</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725643956868</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"runtime/base assets split\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725837189628</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725837189628</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"25\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VCPKGProject\">\r\n    <isAutomaticCheckingOnLaunch value=\"false\" />\r\n    <isAutomaticFoundErrors value=\"true\" />\r\n    <isAutomaticReloadCMake value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"misc\" />\r\n    <MESSAGE value=\"fixed asset loading systems\" />\r\n    <MESSAGE value=\"working on autobuild\" />\r\n    <MESSAGE value=\"fixed --target parameter\" />\r\n    <MESSAGE value=\"added artifacts to autobuild\" />\r\n    <MESSAGE value=\"made autobuild artifacts more precise\" />\r\n    <MESSAGE value=\"renamed autobuild setup to &quot;Autobuild&quot;\" />\r\n    <MESSAGE value=\"[nobuild] allowed non rebuilding\" />\r\n    <MESSAGE value=\"added macOS autobuild\" />\r\n    <MESSAGE value=\"removed accidental bad platform pairs from  autobuild\" />\r\n    <MESSAGE value=\"removed more accidental bad platform pairs from  autobuild\" />\r\n    <MESSAGE value=\"use same compiler for c and c++ in autobuild\" />\r\n    <MESSAGE value=\"[nobuild] bye bye macos autobuild support\" />\r\n    <MESSAGE value=\"added input system\" />\r\n    <MESSAGE value=\"added flycam + mouse grabbing\" />\r\n    <MESSAGE value=\"uncapped the framerate\" />\r\n    <MESSAGE value=\"larger average FPS sampling time\" />\r\n    <MESSAGE value=\"renamed action file to autobuild\" />\r\n    <MESSAGE value=\"packed representation of models working\" />\r\n    <MESSAGE value=\"server is serving packed assets\" />\r\n    <MESSAGE value=\"don't try to return bad assets\" />\r\n    <MESSAGE value=\"added libcurl\" />\r\n    <MESSAGE value=\"runtime/base assets split\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"runtime/base assets split\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cb01de7359be070cc1dd6c5bbacd666bfc4bf15d)
+++ b/.idea/workspace.xml	(date 1726088025981)
@@ -24,10 +24,12 @@
       <config projectName="Hydrogen" targetName="ContinuousBuild" />
       <config projectName="Hydrogen" targetName="Experimental" />
       <config projectName="Hydrogen" targetName="libcurl_object" />
+      <config projectName="Hydrogen" targetName="loader_example" />
       <config projectName="Hydrogen" targetName="ContinuousStart" />
       <config projectName="Hydrogen" targetName="Nightly" />
       <config projectName="Hydrogen" targetName="ExperimentalMemCheck" />
       <config projectName="Hydrogen" targetName="ExperimentalSubmit" />
+      <config projectName="Hydrogen" targetName="yaml-cpp-parse" />
       <config projectName="Hydrogen" targetName="SDL2-static" />
       <config projectName="Hydrogen" targetName="imgui.cmake" />
       <config projectName="Hydrogen" targetName="ContinuousMemCheck" />
@@ -39,6 +41,8 @@
       <config projectName="Hydrogen" targetName="uninstall" />
       <config projectName="Hydrogen" targetName="libcurl_static" />
       <config projectName="Hydrogen" targetName="HydrogenCore" />
+      <config projectName="Hydrogen" targetName="yaml-cpp-read" />
+      <config projectName="Hydrogen" targetName="yaml-cpp-sandbox" />
       <config projectName="Hydrogen" targetName="HydrogenRuntime_Assets" />
       <config projectName="Hydrogen" targetName="ContinuousTest" />
       <config projectName="Hydrogen" targetName="ExperimentalConfigure" />
@@ -57,7 +61,6 @@
       <config projectName="Hydrogen" targetName="NightlyConfigure" />
       <config projectName="Hydrogen" targetName="glad" />
       <config projectName="Hydrogen" targetName="HydrogenServer" />
-      <config projectName="Hydrogen" targetName="SDL2" />
       <config projectName="Hydrogen" targetName="Continuous" />
       <config projectName="Hydrogen" targetName="NightlyCoverage" />
       <config projectName="Hydrogen" targetName="ExperimentalCoverage" />
@@ -71,48 +74,107 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b7057f5c-305f-4c98-9fc0-3c11825fbbe1" name="Changes" comment="added libcurl">
-      <change afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/log.h" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/core/include/core/log.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+    <list default="true" id="b7057f5c-305f-4c98-9fc0-3c11825fbbe1" name="Changes" comment="console autocomplete and history, added assets commands">
+      <change afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/terrain/canyon1.glb" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/assets/test_terrain1.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/runtime/assets/terrain/canyon1.glb" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/server/assets/test_terrain1.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/hydrogen.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/hydrogen.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/CMakeLists.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/assets.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/runtimeassets.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/include/core/systems/script/scriptcomp.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/actorspecasset.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/asset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/engine.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/project/project.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/runtimeassets.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/scene.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/meshasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/render/renderer.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scriptasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/systems/script/scripting.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/core/src/window.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/wrap/wrap.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/core/CMakeLists.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/box/Box.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/box/Box.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/box/Box0.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/AntiqueCamera.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/AntiqueCamera.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_camera_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_camera_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_camera_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_tripod_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_tripod_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/camera/camera_tripod_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/door/door.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/ducky/Duck.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/sofa/GlamVelvetSofa.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/suzanne/Suzanne_MetallicRoughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_actor.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/runtime/assets/test_model2.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/android/hydrogen/app/jni.bak/hydrogen/server/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/include/core/asset.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/asset.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/include/core/assets.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/assets.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/include/core/runtimeassets.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/runtimeassets.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/include/core/runtimeconsole.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/runtimeconsole.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/systems/script/scriptcomp.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/actorspecasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/actorspecasset.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/include/core/systems/render/meshasset.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/systems/render/meshasset.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/src/asset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/asset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/assets.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/assets.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/engine.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/engine.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/project/project.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/project/project.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/src/runtimeassets.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/runtimeassets.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/runtimeconsole.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/runtimeconsole.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/runtimeengine.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/runtimeengine.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/scene.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/scene.cc" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/src/systems/render/meshasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/render/meshasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/render/renderer.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/render/renderer.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/script/scriptasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/script/scriptasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/script/scripting.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/script/scripting.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/window.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/window.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/server/wrap/wrap.cc" beforeDir="false" afterPath="$PROJECT_DIR$/server/wrap/wrap.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/box/Box.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/box/Box.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/box/Box0.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/AntiqueCamera.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/AntiqueCamera.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_camera_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_camera_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_camera_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_tripod_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_tripod_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/camera/camera_tripod_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/door/door.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/ducky/Duck.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_GlassPlasticMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LeatherPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_LensesMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_MetalPartsMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_Normal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/helmet/FlightHelmet_Materials_RubberWoodMat_OcclusionRoughMetal.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/sofa/GlamVelvetSofa.glb" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne.gltf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne_BaseColor.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/suzanne/Suzanne_MetallicRoughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/test_actor.yml" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/assets/test_actor.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/runtime/assets/test_model2.yml" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/assets/test_model2.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/server/assets/project.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/assets/test_model2.yml" beforeDir="false" afterPath="$PROJECT_DIR$/server/assets/test_model2.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/corewrap.py" beforeDir="false" afterPath="$PROJECT_DIR$/server/corewrap.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/hyassetserver.py" beforeDir="false" afterPath="$PROJECT_DIR$/server/hyassetserver.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -136,6 +198,7 @@
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="ROOT_SYNC" value="SYNC" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
   &quot;lastFilter&quot;: {
@@ -193,42 +256,42 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,
-    &quot;CMake Application.HydrogenEditor.executor&quot;: &quot;Debug&quot;,
-    &quot;CMake Application.HydrogenRuntime.executor&quot;: &quot;Run&quot;,
-    &quot;CMake Debug.Hydrogen.executor&quot;: &quot;Debug&quot;,
-    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
-    &quot;Python.main.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.RadMigrateCodeStyle&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;cf.advertisement.text.overridden&quot;: &quot;true&quot;,
-    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
-    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Projects/hydrogen/server/templates&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,
-    &quot;two.files.diff.last.used.file&quot;: &quot;C:/Projects/hydrogen/server/templates/status.html&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ASKED_ADD_EXTERNAL_FILES": "true",
+    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
+    "CMake Application.HydrogenEditor.executor": "Debug",
+    "CMake Application.HydrogenRuntime.executor": "Run",
+    "CMake Debug.Hydrogen.executor": "Debug",
+    "DefaultHtmlFileTemplate": "HTML File",
+    "Python.main.executor": "Run",
+    "RunOnceActivity.RadMigrateCodeStyle": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.cidr.known.project.marker": "true",
+    "RunOnceActivity.readMode.enableVisualFormatting": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "cf.advertisement.text.overridden": "true",
+    "cf.first.check.clang-format": "false",
+    "cidr.known.project.marker": "true",
+    "git-widget-placeholder": "dev",
+    "ignore.virus.scanning.warn.message": "true",
+    "last_opened_file_path": "C:/Projects/hydrogen/runtime/assets",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
+    "two.files.diff.last.used.file": "C:/Projects/hydrogen/server/templates/status.html",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Projects\hydrogen\runtime\assets" />
       <recent name="C:\Projects\hydrogen\server\templates" />
       <recent name="C:\Projects\hydrogen\server" />
       <recent name="C:\Projects\hydrogen\core\shaders\es" />
-      <recent name="C:\Projects\hydrogen\runtime\assets" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Projects\hydrogen\core\include\core" />
@@ -425,11 +488,6 @@
       </method>
     </configuration>
     <configuration name="SDL2-static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="SDL2-static" CONFIG_NAME="Debug-Visual Studio">
-      <method v="2">
-        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="SDL2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="SDL2" CONFIG_NAME="Debug-Visual Studio">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
@@ -465,6 +523,11 @@
       </method>
     </configuration>
     <configuration name="libcurl_static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="libcurl_static" CONFIG_NAME="Debug-Visual Studio">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="loader_example" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="loader_example" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="loader_example">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
@@ -484,6 +547,21 @@
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
     </configuration>
+    <configuration name="yaml-cpp-parse" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp-parse" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="yaml-cpp-parse">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="yaml-cpp-read" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp-read" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="yaml-cpp-read">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="yaml-cpp-sandbox" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp-sandbox" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hydrogen" RUN_TARGET_NAME="yaml-cpp-sandbox">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="yaml-cpp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hydrogen" TARGET_NAME="yaml-cpp" CONFIG_NAME="Debug-Visual Studio">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
@@ -554,13 +632,16 @@
       <item itemvalue="CMake Application.angelscript" />
       <item itemvalue="CMake Application.glad" />
       <item itemvalue="CMake Application.imgui.cmake" />
-      <item itemvalue="CMake Application.SDL2" />
       <item itemvalue="CMake Application.libcurl_object" />
       <item itemvalue="CMake Application.libcurl_static" />
       <item itemvalue="CMake Application.sdl_headers_copy" />
       <item itemvalue="CMake Application.tinygltf" />
       <item itemvalue="CMake Application.uninstall" />
+      <item itemvalue="CMake Application.loader_example" />
       <item itemvalue="CMake Application.yaml-cpp" />
+      <item itemvalue="CMake Application.yaml-cpp-parse" />
+      <item itemvalue="CMake Application.yaml-cpp-read" />
+      <item itemvalue="CMake Application.yaml-cpp-sandbox" />
       <item itemvalue="Python.main" />
     </list>
     <recent_temporary>
@@ -589,7 +670,7 @@
       <workItem from="1725585006797" duration="1178000" />
       <workItem from="1725591940685" duration="53051000" />
       <workItem from="1725946168594" duration="2007000" />
-      <workItem from="1725948695615" duration="4497000" />
+      <workItem from="1725948695615" duration="13285000" />
     </task>
     <task id="LOCAL-00001" summary="misc">
       <option name="closed" value="true" />
@@ -783,7 +864,15 @@
       <option name="project" value="LOCAL" />
       <updated>1725837189628</updated>
     </task>
-    <option name="localTasksCounter" value="25" />
+    <task id="LOCAL-00025" summary="console autocomplete and history, added assets commands">
+      <option name="closed" value="true" />
+      <created>1725953305314</created>
+      <option name="number" value="00025" />
+      <option name="presentableId" value="LOCAL-00025" />
+      <option name="project" value="LOCAL" />
+      <updated>1725953305314</updated>
+    </task>
+    <option name="localTasksCounter" value="26" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -818,7 +907,19 @@
     <MESSAGE value="don't try to return bad assets" />
     <MESSAGE value="added libcurl" />
     <MESSAGE value="runtime/base assets split" />
-    <option name="LAST_COMMIT_MESSAGE" value="runtime/base assets split" />
+    <MESSAGE value="console autocomplete and history, added assets commands" />
+    <option name="LAST_COMMIT_MESSAGE" value="console autocomplete and history, added assets commands" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
+          <url>file://$PROJECT_DIR$/core/include/core/runtimeassets.h</url>
+          <line>100</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
