Index: core/src/assets.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"core/assets.h\"\r\n\r\n#include <string>\r\n#include <thread>\r\n\r\n#include \"curl/curl.h\"\r\n\r\n#include \"core/project/project.h\"\r\n#include \"core/systems/render/meshasset.h\"\r\n\r\n#define LOAD_ASSET_TYPE_CASE(type)  \\\r\n    case type::getTypeId(): {       \\\r\n        loadTyped<type>(assetInfo); \\\r\n        break;                      \\\r\n    }\r\n\r\n\r\n#define REQUEST_ASSET_TYPE_CASE(type)  \\\r\n    case type::getTypeId(): {       \\\r\n        loadTyped<type>(assetInfo); \\\r\n        break;                      \\\r\n    }\r\n\r\nh_core::Assets::Assets() {\r\n    curl_global_init(CURL_GLOBAL_ALL);\r\n\r\n    m_netRequestThreadContext.shouldNetRequestThreadDie = false;\r\n    m_netRequestThreadContext.assetListLock.lock();\r\n    m_netRequestThread = std::thread { netRequestThreadFunction, &m_netRequestThreadContext };\r\n}\r\n\r\nh_core::AssetHash h_core::Assets::getAssetHashFromString(const std::string& string) {\r\n    return std::hash<std::string>()(string);\r\n}\r\n\r\nvoid h_core::Assets::precompile(h_core::Systems* systems) {\r\n    for (int assetIndex = 0; assetIndex < ASSETS_MAX_ASSET_COUNT; ++assetIndex) {\r\n        h_core::Asset* asset = m_assets[assetIndex];\r\n        if (asset != nullptr) { asset->precompile(systems); }\r\n    }\r\n}\r\n\r\nvoid h_core::Assets::destroy() {\r\n    m_netRequestThreadContext.shouldNetRequestThreadDie = true;\r\n    m_netRequestThread.join();\r\n}\r\n\r\nvoid h_core::Assets::loadFromProject(h_core::project::Project* project) {\r\n    for (const h_core::project::ProjectAssetEntry& assetInfo : project->requiredAssets) {\r\n        switch (assetInfo.typeId) {\r\n            LOAD_ASSET_TYPE_CASE(h_core::SceneSpecAsset)\r\n            LOAD_ASSET_TYPE_CASE(h_core::ActorSpecAsset)\r\n            LOAD_ASSET_TYPE_CASE(h_core::script::ScriptAsset)\r\n            LOAD_ASSET_TYPE_CASE(h_core::render::MeshAsset)\r\n        }\r\n    }\r\n}\r\n\r\nuint32_t h_core::Assets::getAssetCount() const {\r\n    return m_assetCount;\r\n}\r\n\r\nvoid h_core::Assets::netRequestThreadFunction(h_core::NetRequestThreadContext* context) {\r\n    while (!context->shouldNetRequestThreadDie) {\r\n        SDL_Log(\"INFO: ASSETS: Net request thread running!\\n\");\r\n\r\n        if (!context->jobs.empty()) {\r\n            // Request asset\r\n            NetRequestJob job = context->jobs.front();\r\n            if (job.assetType == h_core::render::MeshAsset::getTypeId()) {\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    SDL_Log(\"INFO: ASSETS: Killing net request thread...\\n\");\r\n}\r\n\r\nvoid h_core::Assets::flushNetAssets() {\r\n    m_netRequestThreadContext.assetListLock.unlock();\r\n\r\n    while (!m_netRequestThreadContext.netAssetsFlushDone) {\r\n        // Wait\r\n    }\r\n\r\n    m_netRequestThreadContext.assetListLock.lock();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/assets.cc b/core/src/assets.cc
--- a/core/src/assets.cc	(revision 9888a558640d6d3669d94d2f23d23305a24e8fd3)
+++ b/core/src/assets.cc	(date 1725681060897)
@@ -67,8 +67,8 @@
         if (!context->jobs.empty()) {
             // Request asset
             NetRequestJob job = context->jobs.front();
-            if (job.assetType == h_core::render::MeshAsset::getTypeId()) {
-                
+            if (job.assetType) {
+
             }
         }
 
Index: core/include/core/netrequestjob.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by Angus Goucher on 9/6/2024.\r\n//\r\n\r\n#pragma once\r\n\r\n#include \"core/assetindex.h\"\r\n\r\nnamespace h_core {\r\nclass NetRequestJob {\r\n  public:\r\n    h_core::AssetIndex assetIndex;\r\n    uint32_t assetType;\r\n    h_core::Assets* assets;\r\n};\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/include/core/netrequestjob.h b/core/include/core/netrequestjob.h
--- a/core/include/core/netrequestjob.h	(revision 9888a558640d6d3669d94d2f23d23305a24e8fd3)
+++ b/core/include/core/netrequestjob.h	(date 1725681023565)
@@ -9,6 +9,9 @@
 namespace h_core {
 class NetRequestJob {
   public:
+    NetRequestJob(AssetIndex assetIndex, uint32_t assetType, Assets* assets)
+        : assetIndex(assetIndex), assetType(assetType), assets(assets) {}
+
     h_core::AssetIndex assetIndex;
     uint32_t assetType;
     h_core::Assets* assets;
Index: core/include/core/netrequestthreadcontext.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by Angus Goucher on 9/6/2024.\r\n//\r\n\r\n#pragma once\r\n\r\n#include <atomic>\r\n#include <mutex>\r\n#include <deque>\r\n\r\n#include \"core/netrequestjob.h\"\r\n\r\nnamespace h_core {\r\nclass NetRequestThreadContext {\r\n  public:\r\n    NetRequestThreadContext() = default;\r\n\r\n    std::atomic_bool shouldNetRequestThreadDie = false;\r\n    std::atomic_bool netAssetsFlushDone = false;\r\n    std::mutex assetListLock {};\r\n    std::mutex jobQueueLock {};\r\n    std::deque<h_core::NetRequestJob> jobs {};\r\n};\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/include/core/netrequestthreadcontext.h b/core/include/core/netrequestthreadcontext.h
--- a/core/include/core/netrequestthreadcontext.h	(revision 9888a558640d6d3669d94d2f23d23305a24e8fd3)
+++ b/core/include/core/netrequestthreadcontext.h	(date 1725680606911)
@@ -16,7 +16,7 @@
     NetRequestThreadContext() = default;
 
     std::atomic_bool shouldNetRequestThreadDie = false;
-    std::atomic_bool netAssetsFlushDone = false;
+    std::condition_variable netAssetsFlushDone {};
     std::mutex assetListLock {};
     std::mutex jobQueueLock {};
     std::deque<h_core::NetRequestJob> jobs {};
Index: core/include/core/assets.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#pragma once\r\n\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n#include <fstream>\r\n#include <string>\r\n#include <thread>\r\n#include <type_traits>  // grumble grumble\r\n#include <unordered_map>\r\n#include <vector>\r\n\r\n#include \"SDL.h\"\r\n#include \"curl/curl.h\"\r\n#include \"yaml-cpp/yaml.h\"\r\n\r\n#include \"core/asset.h\"\r\n#include \"core/project/projectassetentry.h\"\r\n#include \"core/netrequestthreadcontext.h\"\r\n#include \"core/systems.h\"\r\n\r\n#define ASSETS_LOAD_FAIL_CANT_OPEN_FILE 1\r\n#define ASSETS_LOAD_FAIL_FILE_TOO_BIG   2\r\n\r\n#define ASSETS_MAX_ASSET_COUNT 128\r\n#define ASSETS_ASSET_INDEX_BAD UINT32_MAX\r\n\r\nnamespace h_core {\r\ntypedef uint32_t AssetHash;\r\n\r\nnamespace project {\r\nclass Project;\r\n}\r\n\r\n// Base class for all sources of assets (packed/unpacked)\r\nclass Assets {\r\n  public:\r\n    Assets();\r\n\r\n    void loadFromProject(h_core::project::Project* project);\r\n    void precompile(h_core::Systems* systems);\r\n    void flushNetAssets();\r\n    void destroy();\r\n\r\n    /// @brief convert the name of an asset to its hash\r\n    /// @param string the string to convert (asset name)\r\n    /// @return the hash\r\n    static AssetHash getAssetHashFromString(const std::string& string);\r\n\r\n    /// @brief loads or retrieves an asset index by its name.\r\n    /// @tparam AssetType the asset type to load (base class h_core::Asset)\r\n    /// @param filePath the path to load\r\n    /// @return the asset index (permanent)\r\n    template<typename AssetType>\r\n    h_core::AssetIndex getOrLoadAsset(std::string filePath);\r\n\r\n    /// @brief Get an asset by its index. Note that this pointer is only valid\r\n    /// until the assets are updated again; hold on to an AssetIndex instead.\r\n    /// @tparam AssetType the asset type to load (base class h_core::Asset)\r\n    /// @param index the index to load\r\n    /// @return a pointer (not managed by you!) to the asset\r\n    template<typename AssetType>\r\n    AssetType* getAssetByIndex(h_core::AssetIndex index) const;\r\n\r\n    uint32_t getAssetCount() const;\r\n\r\n    template<typename AssetType>\r\n    void requestNetAssetNow(h_core::AssetIndex index) const;\r\n\r\n    template<typename AssetType>\r\n    void requestNetAsset(h_core::AssetIndex index) const;\r\n\r\n    static void netRequestThreadFunction(h_core::NetRequestThreadContext* context);\r\n\r\n  private:\r\n    template<typename AssetType>\r\n    h_core::AssetIndex loadAssetFromFile(AssetType* out_asset, std::string filePath);\r\n\r\n    template<typename AssetType>\r\n    void loadTyped(h_core::project::ProjectAssetEntry assetInfo);\r\n\r\n    h_core::Asset* m_assets[ASSETS_MAX_ASSET_COUNT] = {};\r\n    std::unordered_map<h_core::AssetHash, h_core::AssetIndex> m_assetIndexMap {};  // hash -> asset index\r\n    h_core::AssetIndex m_nextAssetIndex = 0;\r\n    uint32_t m_assetCount = 0;\r\n\r\n    std::thread m_netRequestThread;\r\n    h_core::NetRequestThreadContext m_netRequestThreadContext {};\r\n    h_core::Systems* m_systems;\r\n};\r\n}  // namespace h_core\r\n\r\ntemplate<typename AssetType>\r\ninline uint32_t h_core::Assets::loadAssetFromFile(AssetType* out_asset, std::string filePath) {\r\n    static_assert(std::is_base_of_v<h_core::Asset, AssetType>, \"Can't load asset type that does not derive from Asset\");\r\n\r\n    // Load file\r\n    const char* fileText = (const char*)SDL_LoadFile(filePath.c_str(), nullptr);\r\n\r\n    // Parse YAML and load asset\r\n    YAML::Node yaml = YAML::Load(fileText);\r\n    out_asset->initFromYaml(this, yaml);\r\n\r\n    m_assetCount++;\r\n\r\n    return 0;\r\n}\r\n\r\ntemplate<typename AssetType>\r\ninline h_core::AssetIndex h_core::Assets::getOrLoadAsset(std::string filePath) {\r\n    static_assert(std::is_base_of_v<h_core::Asset, AssetType>, \"Can't load asset type that does not derive from Asset\");\r\n\r\n    // TODO: This hashing piece to the loading can probably be removed\r\n    h_core::AssetHash hash = getAssetHashFromString(filePath);\r\n    if (m_assetIndexMap.count(hash) > 0) {\r\n        // Load existing asset\r\n        h_core::AssetIndex assetIndex = m_assetIndexMap[hash];\r\n        return assetIndex;\r\n    }\r\n    else {\r\n        // Load new asset\r\n        h_core::AssetIndex assetIndex = m_nextAssetIndex++;\r\n        AssetType* asset = new AssetType();\r\n        uint32_t result = loadAssetFromFile<AssetType>(asset, m_systems, filePath);\r\n        if (result != 0) {\r\n            ::SDL_Log(\"ERROR: Failed to load asset %s\\n\", filePath.c_str());\r\n            return ASSETS_ASSET_INDEX_BAD;\r\n        }\r\n        else {\r\n            m_assets[assetIndex] = asset;\r\n            m_assetIndexMap[hash] = assetIndex;\r\n            return assetIndex;\r\n        }\r\n    }\r\n\r\n    return ASSETS_ASSET_INDEX_BAD;\r\n}\r\n\r\ntemplate<typename AssetType>\r\ninline AssetType* h_core::Assets::getAssetByIndex(h_core::AssetIndex index) const {\r\n    static_assert(std::is_base_of_v<h_core::Asset, AssetType>, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    return static_cast<AssetType*>(m_assets[index]);\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::Assets::loadTyped(h_core::project::ProjectAssetEntry assetInfo) {\r\n    static_assert(std::is_base_of_v<h_core::Asset, AssetType>, \"Can't get asset type that does not derive from Asset\");\r\n\r\n    if (assetInfo.isRemote) {\r\n        // Load from server\r\n        requestNetAssetNow<AssetType>(assetInfo.index);\r\n        return;\r\n    }\r\n    else {\r\n        // Load from file\r\n        AssetType* asset = new AssetType();\r\n        loadAssetFromFile<AssetType>(asset, assetInfo.assetPath);\r\n        m_assets[assetInfo.index] = asset;\r\n    }\r\n}\r\n\r\ntemplate<typename AssetType>\r\nsize_t netAssetWrite(void* buffer, size_t pieceSize, size_t pieceCount, void* out_asset) {\r\n    static_assert(\r\n        std::is_base_of_v<h_core::Asset, AssetType>, \"Can't netload asset type that does not inherit from Asset\");\r\n\r\n    AssetType* asset = new AssetType();\r\n    size_t byteCount = pieceSize * pieceCount;\r\n    asset->fromPacked(buffer, byteCount);\r\n    *(AssetType**)out_asset = asset;\r\n\r\n    SDL_Log(\"INFO: ASSETS: Net asset write %d bytes\\n\", byteCount);\r\n\r\n    return byteCount;\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::Assets::requestNetAssetNow(h_core::AssetIndex index) const {\r\n    CURL* netHandle = curl_easy_init();\r\n    std::string url = std::string(\"localhost:5000/asset/\") + std::to_string(index);\r\n    SDL_Log(\"INFO: ASSETS: Requesting %s\\n...\", url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_URL, (void*)url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEFUNCTION, &netAssetWrite<AssetType>);\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEDATA, &m_assets[index]);\r\n    CURLcode result = curl_easy_perform(netHandle);\r\n    if (result != CURLE_OK) { SDL_Log(\"WARN: ASSETS: Curl asset %d error: %s\\n\", index, curl_easy_strerror(result)); }\r\n    else { SDL_Log(\"WARN: ASSETS: Curled asset %d OK\\n\", index); }\r\n}\r\n\r\ntemplate<typename AssetType>\r\nvoid h_core::Assets::requestNetAsset(h_core::AssetIndex index) const {\r\n    CURL* netHandle = curl_easy_init();\r\n    std::string url = std::string(\"localhost:5000/asset/\") + std::to_string(index);\r\n    SDL_Log(\"INFO: ASSETS: Requesting %s\\n...\", url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_URL, (void*)url.c_str());\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEFUNCTION, &netAssetWrite<AssetType>);\r\n    curl_easy_setopt(netHandle, CURLOPT_WRITEDATA, &m_assets[index]);\r\n    CURLcode result = curl_easy_perform(netHandle);\r\n    if (result != CURLE_OK) { SDL_Log(\"WARN: ASSETS: Curl asset %d error: %s\\n\", index, curl_easy_strerror(result)); }\r\n    else { SDL_Log(\"WARN: ASSETS: Curled asset %d OK\\n\", index); }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/include/core/assets.h b/core/include/core/assets.h
--- a/core/include/core/assets.h	(revision 9888a558640d6d3669d94d2f23d23305a24e8fd3)
+++ b/core/include/core/assets.h	(date 1725740363821)
@@ -64,7 +64,7 @@
     uint32_t getAssetCount() const;
 
     template<typename AssetType>
-    void requestNetAssetNow(h_core::AssetIndex index) const;
+    void requestNetAssetNow(h_core::Asset** out_asset, h_core::AssetIndex index) const;
 
     template<typename AssetType>
     void requestNetAsset(h_core::AssetIndex index) const;
@@ -175,13 +175,13 @@
 }
 
 template<typename AssetType>
-void h_core::Assets::requestNetAssetNow(h_core::AssetIndex index) const {
+void h_core::Assets::requestNetAssetNow(h_core::Asset** out_asset, h_core::AssetIndex index) const {
     CURL* netHandle = curl_easy_init();
     std::string url = std::string("localhost:5000/asset/") + std::to_string(index);
     SDL_Log("INFO: ASSETS: Requesting %s\n...", url.c_str());
     curl_easy_setopt(netHandle, CURLOPT_URL, (void*)url.c_str());
     curl_easy_setopt(netHandle, CURLOPT_WRITEFUNCTION, &netAssetWrite<AssetType>);
-    curl_easy_setopt(netHandle, CURLOPT_WRITEDATA, &m_assets[index]);
+    curl_easy_setopt(netHandle, CURLOPT_WRITEDATA, out_asset);
     CURLcode result = curl_easy_perform(netHandle);
     if (result != CURLE_OK) { SDL_Log("WARN: ASSETS: Curl asset %d error: %s\n", index, curl_easy_strerror(result)); }
     else { SDL_Log("WARN: ASSETS: Curled asset %d OK\n", index); }
@@ -189,13 +189,11 @@
 
 template<typename AssetType>
 void h_core::Assets::requestNetAsset(h_core::AssetIndex index) const {
-    CURL* netHandle = curl_easy_init();
-    std::string url = std::string("localhost:5000/asset/") + std::to_string(index);
-    SDL_Log("INFO: ASSETS: Requesting %s\n...", url.c_str());
-    curl_easy_setopt(netHandle, CURLOPT_URL, (void*)url.c_str());
-    curl_easy_setopt(netHandle, CURLOPT_WRITEFUNCTION, &netAssetWrite<AssetType>);
-    curl_easy_setopt(netHandle, CURLOPT_WRITEDATA, &m_assets[index]);
-    CURLcode result = curl_easy_perform(netHandle);
-    if (result != CURLE_OK) { SDL_Log("WARN: ASSETS: Curl asset %d error: %s\n", index, curl_easy_strerror(result)); }
-    else { SDL_Log("WARN: ASSETS: Curled asset %d OK\n", index); }
+    m_netRequestThreadContext.jobQueueLock.lock();
+
+    m_netRequestThreadContext.jobs.emplace_back(
+        index,
+                                      );
+
+    m_netRequestThreadContext.jobQueueLock.unlock();
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"CMakePresetLoader\"><![CDATA[{\r\n  \"useNewFormat\": true\r\n}]]></component>\r\n  <component name=\"CMakeReloadState\">\r\n    <option name=\"reloaded\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\">\r\n    <generated>\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_CopyShaders\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"angelscript\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_Shared\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2main\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Experimental\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenEditor\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"libcurl_object\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Nightly\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalSubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2-static\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"imgui.cmake\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore_AngelScriptExtensions\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"sdl_headers_copy\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousSubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenServer_Wrapper\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"uninstall\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"libcurl_static\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenCore\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenRuntime_Assets\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousTest\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyMemoryCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2_test\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyMemCheck\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlySubmit\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"yaml-cpp\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyBuild\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousUpdate\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenRuntime\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ContinuousConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"tinygltf\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyUpdate\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyConfigure\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"glad\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"HydrogenServer\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"SDL2\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"Continuous\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalCoverage\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"NightlyStart\" />\r\n      <config projectName=\"Hydrogen\" targetName=\"ExperimentalUpdate\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b7057f5c-305f-4c98-9fc0-3c11825fbbe1\" name=\"Changes\" comment=\"added libcurl\">\r\n      <change afterPath=\"$PROJECT_DIR$/core/include/core/assetindex.h\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/core/include/core/netrequestjob.h\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/core/include/core/netrequestthreadcontext.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/codeStyles/Project.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/codeStyles/Project.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/hydrogen.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/hydrogen.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/asset.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/asset.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/assets.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/assets.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/project/projectassetentry.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/project/projectassetentry.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/include/core/systems/render/meshasset.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/include/core/systems/render/meshasset.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/asset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/asset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/assets.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/assets.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/engine.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/engine.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/project/project.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/project/project.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/scene.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/scene.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/render/gl4renderer.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/render/gl4renderer.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/src/systems/render/meshasset.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/src/systems/render/meshasset.cc\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/runtime/assets/butter/Butter.glb\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/runtime/assets/project.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/runtime/assets/project.yml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/server/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/server/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/server/hyassetserver.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/server/hyassetserver.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"NamedScopeManager\">\r\n    <scope name=\"Core Source\" pattern=\"file:core/src//*\" />\r\n    <scope name=\"Core Headers\" pattern=\"file:core/include//*\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2lRXeQrlEOuhFzwP84z4XzhILwF\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"ASKED_MARK_IGNORED_FILES_AS_EXCLUDED\": \"true\",\r\n    \"CMake Application.HydrogenEditor.executor\": \"Run\",\r\n    \"CMake Application.HydrogenRuntime.executor\": \"Run\",\r\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"cf.advertisement.text.overridden\": \"true\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"git-widget-placeholder\": \"dev\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Projects/hydrogen/server/templates\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\r\n    \"two.files.diff.last.used.file\": \"C:/Projects/hydrogen/server/templates/status.html\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Projects\\hydrogen\\server\\templates\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\server\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\shaders\\es\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\runtime\\assets\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\shaders\\core\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\src\\project\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\include\\core\\project\" />\r\n      <recent name=\"C:\\Projects\\hydrogen\\core\\include\\core\\input\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"CMake Application.HydrogenRuntime\">\r\n    <configuration default=\"true\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Continuous\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Continuous\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousBuild\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousConfigure\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousCoverage\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousMemCheck\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousStart\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousSubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousSubmit\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousTest\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContinuousUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ContinuousUpdate\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Experimental\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Experimental\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalBuild\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalConfigure\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalCoverage\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalMemCheck\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalStart\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalSubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalSubmit\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalTest\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ExperimentalUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"ExperimentalUpdate\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_AngelScriptExtensions\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_AngelScriptExtensions\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_CopyShaders\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_CopyShaders\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenCore_Shared\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenCore_Shared\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenEditor\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenEditor\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"Hydrogen\" RUN_TARGET_NAME=\"HydrogenEditor\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenRuntime\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenRuntime\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"Hydrogen\" RUN_TARGET_NAME=\"HydrogenRuntime\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenRuntime_Assets\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenRuntime_Assets\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenServer\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenServer\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HydrogenServer_Wrapper\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"HydrogenServer_Wrapper\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Nightly\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"Nightly\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyBuild\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyBuild\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyConfigure\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyConfigure\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyCoverage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyCoverage\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyMemCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyMemCheck\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyMemoryCheck\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyMemoryCheck\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyStart\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyStart\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlySubmit\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlySubmit\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyTest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyTest\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NightlyUpdate\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"NightlyUpdate\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2-static\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2-static\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2_test\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2_test\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SDL2main\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"SDL2main\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"angelscript\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"angelscript\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"glad\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"glad\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"imgui.cmake\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"imgui.cmake\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"libcurl_object\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"libcurl_object\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"libcurl_static\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"libcurl_static\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"sdl_headers_copy\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"sdl_headers_copy\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"tinygltf\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"tinygltf\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"uninstall\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"uninstall\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"yaml-cpp\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Hydrogen\" TARGET_NAME=\"yaml-cpp\" CONFIG_NAME=\"Debug\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"hydrogen\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/server\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/server/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"CMake Application.HydrogenCore\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_AngelScriptExtensions\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_CopyShaders\" />\r\n      <item itemvalue=\"CMake Application.HydrogenCore_Shared\" />\r\n      <item itemvalue=\"CMake Application.angelscript\" />\r\n      <item itemvalue=\"CMake Application.libcurl_object\" />\r\n      <item itemvalue=\"CMake Application.libcurl_static\" />\r\n      <item itemvalue=\"CMake Application.glad\" />\r\n      <item itemvalue=\"CMake Application.imgui.cmake\" />\r\n      <item itemvalue=\"CMake Application.SDL2\" />\r\n      <item itemvalue=\"CMake Application.SDL2-static\" />\r\n      <item itemvalue=\"CMake Application.SDL2_test\" />\r\n      <item itemvalue=\"CMake Application.SDL2main\" />\r\n      <item itemvalue=\"CMake Application.sdl_headers_copy\" />\r\n      <item itemvalue=\"CMake Application.uninstall\" />\r\n      <item itemvalue=\"CMake Application.tinygltf\" />\r\n      <item itemvalue=\"CMake Application.Continuous\" />\r\n      <item itemvalue=\"CMake Application.ContinuousBuild\" />\r\n      <item itemvalue=\"CMake Application.ContinuousConfigure\" />\r\n      <item itemvalue=\"CMake Application.ContinuousCoverage\" />\r\n      <item itemvalue=\"CMake Application.ContinuousMemCheck\" />\r\n      <item itemvalue=\"CMake Application.ContinuousStart\" />\r\n      <item itemvalue=\"CMake Application.ContinuousSubmit\" />\r\n      <item itemvalue=\"CMake Application.ContinuousTest\" />\r\n      <item itemvalue=\"CMake Application.ContinuousUpdate\" />\r\n      <item itemvalue=\"CMake Application.Experimental\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalBuild\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalConfigure\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalCoverage\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalMemCheck\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalStart\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalSubmit\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalTest\" />\r\n      <item itemvalue=\"CMake Application.ExperimentalUpdate\" />\r\n      <item itemvalue=\"CMake Application.Nightly\" />\r\n      <item itemvalue=\"CMake Application.NightlyBuild\" />\r\n      <item itemvalue=\"CMake Application.NightlyConfigure\" />\r\n      <item itemvalue=\"CMake Application.NightlyCoverage\" />\r\n      <item itemvalue=\"CMake Application.NightlyMemCheck\" />\r\n      <item itemvalue=\"CMake Application.NightlyMemoryCheck\" />\r\n      <item itemvalue=\"CMake Application.NightlyStart\" />\r\n      <item itemvalue=\"CMake Application.NightlySubmit\" />\r\n      <item itemvalue=\"CMake Application.NightlyTest\" />\r\n      <item itemvalue=\"CMake Application.NightlyUpdate\" />\r\n      <item itemvalue=\"CMake Application.yaml-cpp\" />\r\n      <item itemvalue=\"CMake Application.HydrogenEditor\" />\r\n      <item itemvalue=\"CMake Application.HydrogenRuntime\" />\r\n      <item itemvalue=\"CMake Application.HydrogenRuntime_Assets\" />\r\n      <item itemvalue=\"CMake Application.HydrogenServer\" />\r\n      <item itemvalue=\"CMake Application.HydrogenServer_Wrapper\" />\r\n      <item itemvalue=\"Python.main\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b7057f5c-305f-4c98-9fc0-3c11825fbbe1\" name=\"Changes\" comment=\"\" />\r\n      <created>1725137426654</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725137426654</updated>\r\n      <workItem from=\"1725137427672\" duration=\"5528000\" />\r\n      <workItem from=\"1725143960544\" duration=\"9000\" />\r\n      <workItem from=\"1725154721087\" duration=\"3325000\" />\r\n      <workItem from=\"1725161738514\" duration=\"10113000\" />\r\n      <workItem from=\"1725175022297\" duration=\"11047000\" />\r\n      <workItem from=\"1725219536312\" duration=\"102000\" />\r\n      <workItem from=\"1725219651630\" duration=\"40084000\" />\r\n      <workItem from=\"1725396846618\" duration=\"5597000\" />\r\n      <workItem from=\"1725421405150\" duration=\"23873000\" />\r\n      <workItem from=\"1725585006797\" duration=\"1178000\" />\r\n      <workItem from=\"1725591940685\" duration=\"30630000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"misc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725138416967</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725138416967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fixed asset loading systems\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725143443249</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725143443249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"working on autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725217404893</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725217404893</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fixed --target parameter\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725217555541</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725217555541</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"added artifacts to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725218626036</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725218626036</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"made autobuild artifacts more precise\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725219240701</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725219240701</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"renamed autobuild setup to &quot;Autobuild&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220158923</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220158923</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"[nobuild] allowed non rebuilding\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220496725</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220496725</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"added macOS autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220658225</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220658225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"removed accidental bad platform pairs from  autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220729307</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220729307</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"removed more accidental bad platform pairs from  autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725220763996</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725220763996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"use same compiler for c and c++ in autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725235112329</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725235112329</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"[nobuild] bye bye macos autobuild support\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725235332563</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725235332563</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"added input system\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725319509179</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725319509179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"added flycam + mouse grabbing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725340002967</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725340002967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"uncapped the framerate\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725342973119</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725342973119</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"larger average FPS sampling time\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343125586</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343125586</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"renamed action file to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343347163</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343347163</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"renamed action file to autobuild\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725343610704</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725343610704</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"packed representation of models working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725600399804</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725600399804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"server is serving packed assets\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725605977985</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725605977985</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"don't try to return bad assets\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725642667514</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725642667514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"added libcurl\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725643956868</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725643956868</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"24\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VCPKGProject\">\r\n    <isAutomaticCheckingOnLaunch value=\"false\" />\r\n    <isAutomaticFoundErrors value=\"true\" />\r\n    <isAutomaticReloadCMake value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"misc\" />\r\n    <MESSAGE value=\"fixed asset loading systems\" />\r\n    <MESSAGE value=\"working on autobuild\" />\r\n    <MESSAGE value=\"fixed --target parameter\" />\r\n    <MESSAGE value=\"added artifacts to autobuild\" />\r\n    <MESSAGE value=\"made autobuild artifacts more precise\" />\r\n    <MESSAGE value=\"renamed autobuild setup to &quot;Autobuild&quot;\" />\r\n    <MESSAGE value=\"[nobuild] allowed non rebuilding\" />\r\n    <MESSAGE value=\"added macOS autobuild\" />\r\n    <MESSAGE value=\"removed accidental bad platform pairs from  autobuild\" />\r\n    <MESSAGE value=\"removed more accidental bad platform pairs from  autobuild\" />\r\n    <MESSAGE value=\"use same compiler for c and c++ in autobuild\" />\r\n    <MESSAGE value=\"[nobuild] bye bye macos autobuild support\" />\r\n    <MESSAGE value=\"added input system\" />\r\n    <MESSAGE value=\"added flycam + mouse grabbing\" />\r\n    <MESSAGE value=\"uncapped the framerate\" />\r\n    <MESSAGE value=\"larger average FPS sampling time\" />\r\n    <MESSAGE value=\"renamed action file to autobuild\" />\r\n    <MESSAGE value=\"packed representation of models working\" />\r\n    <MESSAGE value=\"server is serving packed assets\" />\r\n    <MESSAGE value=\"don't try to return bad assets\" />\r\n    <MESSAGE value=\"added libcurl\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added libcurl\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"com.jetbrains.cidr.execution.debugger.OCBreakpointType\">\r\n          <url>file://$PROJECT_DIR$/core/include/core/assets.h</url>\r\n          <line>150</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"CMakeRunConfiguration\">\r\n        <watch expression=\"assets-&gt;m_assets[39]\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9888a558640d6d3669d94d2f23d23305a24e8fd3)
+++ b/.idea/workspace.xml	(date 1725740363872)
@@ -70,28 +70,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b7057f5c-305f-4c98-9fc0-3c11825fbbe1" name="Changes" comment="added libcurl">
-      <change afterPath="$PROJECT_DIR$/core/include/core/assetindex.h" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/core/include/core/netrequestjob.h" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/core/include/core/netrequestthreadcontext.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/hydrogen.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/hydrogen.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/core/CMakeLists.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/include/core/asset.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/asset.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/include/core/assets.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/assets.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/include/core/project/projectassetentry.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/project/projectassetentry.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/include/core/systems/render/meshasset.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/systems/render/meshasset.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/asset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/asset.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/include/core/netrequestjob.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/netrequestjob.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/include/core/netrequestthreadcontext.h" beforeDir="false" afterPath="$PROJECT_DIR$/core/include/core/netrequestthreadcontext.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/src/assets.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/assets.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/engine.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/engine.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/project/project.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/project/project.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/scene.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/scene.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/render/gl4renderer.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/render/gl4renderer.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/src/systems/render/meshasset.cc" beforeDir="false" afterPath="$PROJECT_DIR$/core/src/systems/render/meshasset.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/runtime/assets/butter/Butter.glb" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/runtime/assets/project.yml" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/assets/project.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/server/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/server/CMakeLists.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/server/hyassetserver.py" beforeDir="false" afterPath="$PROJECT_DIR$/server/hyassetserver.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -527,7 +510,7 @@
       <workItem from="1725396846618" duration="5597000" />
       <workItem from="1725421405150" duration="23873000" />
       <workItem from="1725585006797" duration="1178000" />
-      <workItem from="1725591940685" duration="30630000" />
+      <workItem from="1725591940685" duration="34195000" />
     </task>
     <task id="LOCAL-00001" summary="misc">
       <option name="closed" value="true" />
